{"version":3,"sources":["main/helpers/GlobalContext.jsx","main/pages/console.jsx","i18n.js","main/classes/commands.jsx","main/classes/jogos.jsx","main/app.jsx","index.jsx"],"names":["GlobalContext","React","createContext","GlobalContextProvider","Provider","getRndInteger","min","max","Math","floor","random","formatScoreResult","lines","size","result_size","filler_char","filler_line","repeat","header","footer","style","transform","width","formated_lines","forEach","line","fillers","length","teve_splice","push","sliced_lines","slice","i","pop","lineHeight","formatListResult","title","itens","list","List","component","className","aria-label","ListItem","ListItemText","primary","map","item","inset","props","useContext","global_context","setGlobalContext","useState","user","usuario_logado","setUsuarioLogado","terminal_ref","createRef","useEffect","setTerminal","current","jogos","setCommands","setJogos","jogos_instance","make_jogos","commands_instance","make_menu","commands","Row","marginLeft","Button","variant","disabled","ref","welcomeMessage","Image","src","process","rounded","marginBottom","i18n","t","promptLabel","commandCallback","result","next_callback","dangerMode","autoFocus","noDefaults","promptLabelStyle","color","height","margin","minWidth","minHeight","position","borderRadius","top","bottom","left","right","borderBottom","borderRight","contentStyle","use","LanguageDetector","init","resources","translations","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","Commands","context","state","this","teste","description","usage","fn","console","log","terminal","ajuda","showHelp","limpar","stdout","language","newlang","includes","changeLanguage","window","location","reload","lista","lista_jogos","Object","keys","nome_jogo","descricao","jogar","nome_do_jogo","Number","isNaN","instrucoes","login","usuario","senha","exemplo_do_comando","localStorage","getItem","registrar","setItem","test","help","clear","play","register","Component","contextType","Jogos","finish_commands_config","local_commands","local_commands_en","main_menu_commands","pedra_papel_tesoura","voltar","usar","jogada","opcoes","resultado","jogada_ai","venceu_ou_empate","back","flip_a_coin","hidden","flip","a_aventura","voltar_option","comecar","new_menu","continuar","continue","start","rock_paper_scissors","the_adventure","toast","configure","actual_page","setPage","value","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8efaab29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nconst GlobalContextProvider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport { GlobalContextProvider as GlobalContextProvider };","import React, {useState, useContext, useEffect} from 'react';\r\nimport Terminal from 'react-console-emulator'\r\nimport { Button, Row, Image} from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nfunction getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}\r\n\r\nfunction formatScoreResult(lines = [], size=35) {\r\n    const result_size = size\r\n    const filler_char = '+'\r\n    const filler_line = <div>|{filler_char.repeat(result_size-2)}|<br/></div>\r\n    var header =<div>{'_'.repeat(result_size)}<br/>{filler_line}</div>\r\n    var footer =<div>{filler_line}<div style={{transform: \"rotate(180deg)\", width: \"max-content\"}}>{'_'.repeat(result_size)}</div></div>\r\n    var formated_lines = []\r\n    lines.forEach((line) => {\r\n        var fillers = result_size-4-line.length\r\n        var teve_splice = false\r\n        if (line.length < result_size) {\r\n            formated_lines.push(<div>|{filler_char.repeat(Math.floor(fillers/2))} {line} {filler_char.repeat(Math.floor(fillers/2)+(fillers%2===1?1:0))}|<br/></div>)\r\n        } else {\r\n            teve_splice = true\r\n            const sliced_lines = Math.floor(line.length/ (result_size-4))+1\r\n            var slice = ''\r\n            var i=0\r\n            while(i<sliced_lines){\r\n                slice = line.slice(((result_size-2)*i), ((result_size-2)*(i+1)))\r\n                fillers = result_size-2-slice.length\r\n                formated_lines.push(<div>|{slice}{filler_char.repeat(Math.floor(fillers))}|<br/></div>)\r\n                i++\r\n            }\r\n            formated_lines.push(filler_line)\r\n        }\r\n        if (teve_splice) formated_lines.pop()\r\n    })\r\n    return <p style={{lineHeight:'13px'}}>{header} {formated_lines} {footer}</p>\r\n}\r\n\r\nfunction formatListResult(title='', itens = []) {\r\n    var i=0;\r\n    const list = <List component=\"nav\" className=\"list-format\" aria-label=\"contacts\">\r\n                    <ListItem className=\"title\">\r\n                        <ListItemText primary={title} />\r\n                    </ListItem>\r\n                    {itens.map(item => {\r\n                        i++;\r\n                        return <ListItem >\r\n                            {i}\r\n                            <ListItemText inset primary={item} />\r\n                        </ListItem>\r\n                    })}\r\n                </List>\r\n    return list\r\n}\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const [usuario_logado, setUsuarioLogado] = useState(global_context.user);\r\n    const terminal_ref = React.createRef()\r\n    useEffect(() => {\r\n        global_context.setTerminal(terminal_ref.current);\r\n        global_context.jogos= jogos\r\n        global_context.formatScoreResult = formatScoreResult\r\n        global_context.formatListResult = formatListResult\r\n        global_context.setUsuarioLogado = setUsuarioLogado\r\n        global_context.setCommands = setCommands\r\n        global_context.setJogos = setJogos\r\n        global_context.getRndInteger = getRndInteger\r\n    })\r\n    \r\n    const [jogos, setJogos] = useState(global_context.jogos_instance.make_jogos());\r\n    const [commands, setCommands] = useState(global_context.commands_instance.make_menu());\r\n    const callback_terminal = (result) => {\r\n        if (global_context.next_callback) global_context.next_callback()\r\n    }\r\n\r\n    return (\r\n          <div className=\"content-console\">\r\n              <div className=\"win-bar\">\r\n                  <Row>\r\n                    <h3 style={{marginLeft: \"2vh\"}}>ConsoleStation</h3>\r\n                    <div className=\"win-control-buttons\">\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><MinimizeIcon /></Button>\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><CloseIcon /></Button>\r\n                    </div>\r\n                  </Row>\r\n                  <Row>\r\n                    <Terminal\r\n                    ref={terminal_ref}\r\n                    commands={commands}\r\n                    welcomeMessage={<div>\r\n                            <p>\r\n                            <Image src={process.env.PUBLIC_URL + \"/cs-logo.png\"} rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                            <h3>{global_context.i18n.t(\"Seja bem vindo ao ConsoleStation\")}</h3><br/>\r\n                            {global_context.i18n.t(\"Para ver uma lista de comandos digite \")}<i>{global_context.i18n.t(\"ajuda\")}</i><br/>\r\n                            {global_context.i18n.t(\"Para limpar o terminal digite \")}<i>{global_context.i18n.t(\"limpar\")}</i>                            \r\n                            </p>\r\n                        </div>}\r\n                    promptLabel={usuario_logado + '@Consolestation:~$'}\r\n                    commandCallback={callback_terminal}\r\n                    dangerMode\r\n                    autoFocus\r\n                    noDefaults\r\n                    promptLabelStyle={{\r\n                        color: \"#6890ff\"\r\n                    }}\r\n                    style={{\r\n                        width:\"98%\", \r\n                        height:\"92%\", \r\n                        margin:\"50px auto\",\r\n                        minWidth: \"98%\", \r\n                        minHeight: \"2%\",\r\n                        position: \"absolute\",\r\n                        borderRadius: \"0 0 5px 5px\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        borderBottom: 'solid',\r\n                        borderRight: 'solid'\r\n                        }}\r\n                    contentStyle={{\r\n                        height: \"95%\"\r\n                    }}\r\n                    />\r\n                  </Row>\r\n              </div>\r\n          </div>\r\n      )\r\n    }","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  // we init with resources\r\n  resources: {\r\n    'en': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Welcome to ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"To see a list of commands use \",\r\n        \"Para limpar o terminal digite \": \"To clear the terminal use \",\r\n        'Trocar linguagem do sistema': 'Change system language',\r\n        \"Comando inválido!\": \"Command Invalid\",\r\n        \"Exemplo do comando\": \"Command example: \",\r\n        'Lista de jogos instalados': 'List of installed games',\r\n        'Jogar um dos jogos disponíveis na memória': 'Play one of the installed games',\r\n        'jogar <nome_do_jogo>': 'play <game_name>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Invalid game, see the list of installed games.',\r\n        'Efetuar Login.': 'Make login.',\r\n        'login <usuario> <senha>': 'login <user> <password>',\r\n        \"Nome_de_Usuario\": \"Username\",\r\n        'Usuário logado!': 'Login success!',\r\n        \"Credenciais Inválidas!\": \"Invalid login information!\",\r\n        'Efetuar cadastro de usuário.': 'Register new user.',\r\n        'registrar_example': 'register <user: 30 characters max> <password: Exactly 4 characters>',\r\n        \"Senha e Usuário requerido!\": \"User and password required\",\r\n        \"Senha Inválida!\": \"Invalid password\",\r\n        \"Usuário Inválido!\": \"Invalid user\",\r\n        \"Usuário registrado com sucesso!\": \"User registration successfull!\",\r\n        \"Usuário\": \"user\",\r\n        \"Senha\": \"password\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Make login to use it\",\r\n        'Jogo de pedra, papel e tesoura': 'Rock, paper and scissors',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use command use <choice> to play against me, the choice can be rock, paper or scissors',\r\n        'Volta para o menu principal': 'Go to main menu',\r\n        'Voltando ao menu principal!': 'Going to main menu',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Play against the computer using rock, paper or scissors',\r\n        'usar <pedra ou papel ou tesoura>': 'use <rock or paper or scissors>',\r\n        'pedra': 'rock',\r\n        'papel': 'paper',\r\n        'tesoura': 'scissors',\r\n        \"sua_jogada\": \"Your move: \",\r\n        \"ai_jogada\": \"My move(AI): \",\r\n        \"Um empate!\": \"A draw\",\r\n        \"Você ganhou!\": \"You win\",\r\n        \"Você perdeu!\": \"You lose\",\r\n        \"Opção de jogada inválida!\": \"Invalid choice\",\r\n        'Cara ou coroa?': 'Heads or Tails?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': \"Use flip to flip a coin and see if it's heads or tails\",\r\n        'Joga uma moeda': 'Flip a coin into the air',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'The coin flips in the air for some time and then hits the ground, you stand and go see what landed',\r\n        'resultado_cara': 'Result: Heads',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': \"go trough a unknown figure that wasn't there 5 minutes before, \",\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'The coin flips in the air for some time, bouncing on the ground before landing a little too far, you run after it, ',\r\n        ' e quando chega vê o resultado': ' and when you catch it you see what landed',\r\n        'resultado_coroa': 'Result: Tails',\r\n        'teste': 'test',\r\n        'lista': 'list',\r\n        \"registrar\": \"register\",\r\n        'voltar': 'back',\r\n        'jogar': 'flip',\r\n        'Comece sua aventura': 'Start the adventure',\r\n        'Use o comando ajuda a qualquer momento para verificar as opções.': 'Use the help command at any moment to see the options.',\r\n        'Limpar tela':'Clear screen',\r\n        'limpar':'clear',\r\n        'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso': 'Lists all commands avaliable with a brief description and use example',\r\n        'ajuda': 'help',\r\n        'comecar':'start',\r\n        'aventura_start': 'Você olha para uma estrada deserta e se pergunta: \"O que estou fazendo aqui?\"',\r\n        \"aventura_continue_1\": 'Você começa a andar na estrada deserta.',\r\n\r\n      }\r\n    },\r\n    'pt-BR': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Seja bem vindo ao ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"Para ver a lista de comandos use \",\r\n        \"Para limpar o terminal digite \": \"Para limpar o terminal use \",\r\n        'Trocar linguagem do sistema': 'Trocar linguagem do sistema',\r\n        \"Comando inválido!\":\"Comando inválido\",\r\n        \"Exemplo do comando\":\"Exemplo do comando: \",\r\n        'Lista de jogos instalados': 'Lista de jogos instalados',\r\n        'Jogar um dos jogos disponíveis na memória': 'Jogar um dos jogos disponíveis na memória',\r\n        'jogar <nome_do_jogo>': 'jogar <nome_do_jogo>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Jogo inválido, veja a lista de jogos disponíveis.',\r\n        'Efetuar Login.': 'Efetuar Login.',\r\n        'login <usuario> <senha>': 'login <usuario> <senha>',\r\n        \"Nome_de_Usuario\": \"Nome_de_Usuario\",\r\n        'Usuário logado!': 'Usuário logado!',\r\n        \"Credenciais Inválidas!\": \"Credenciais Inválidas!\",\r\n        'Efetuar cadastro de usuário.': 'Efetuar cadastro de usuário.',\r\n        'registrar_example': 'registrar <usuario: Máximo de 30 caracteres> <senha: Apenas 4 caracteres>',\r\n        \"Senha e Usuário requerido!\": \"Senha e Usuário requerido!\",\r\n        \"Senha Inválida!\": \"Senha Inválida!\",\r\n        \"Usuário Inválido!\": \"Usuário Inválido!\",\r\n        \"Usuário registrado com sucesso!\": \"Usuário registrado com sucesso!\",\r\n        \"Usuário\": \"Usuário\",\r\n        \"Senha\": \"Senha\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Faça o Login para usa-lo como usuário atual.\",\r\n        'Jogo de pedra, papel e tesoura': 'Jogo de pedra, papel e tesoura',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura',\r\n        'Volta para o menu principal': 'Volta para o menu principal',\r\n        'Voltando ao menu principal!': 'Voltando ao menu principal!',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Joga contra o computador usando pedra, papel ou tesoura',\r\n        'usar <pedra ou papel ou tesoura>': 'usar <pedra ou papel ou tesoura>',\r\n        'pedra': 'pedra',\r\n        'papel': 'papel',\r\n        'tesoura': 'tesoura',\r\n        \"sua_jogada\": \"Sua Jogada: \",\r\n        \"ai_jogada\": \"Minha jogada(AI): \",\r\n        \"Um empate!\": \"Um empate!\",\r\n        \"Você ganhou!\": \"Você ganhou!\",\r\n        \"Você perdeu!\": \"Você perdeu!\",\r\n        \"Opção de jogada inválida!\": \"Opção de jogada inválida!\",\r\n        'Cara ou coroa?': 'Cara ou coroa?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': 'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa',\r\n        'Joga uma moeda': 'Joga uma moeda',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado',\r\n        'resultado_cara': 'Resultado: Cara',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': 'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ',\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,',\r\n        ' e quando chega vê o resultado': ' e quando chega vê o resultado',\r\n        'resultado_coroa': 'Resultado: Coroa',\r\n        'teste': 'teste',\r\n        'lista': 'lista',\r\n        \"registrar\": \"registrar\",\r\n        'voltar': 'voltar',\r\n        'jogar': 'jogar',\r\n        'Comece sua aventura': 'Comece sua aventura',\r\n        'Use o comando ajuda a qualquer momento para verificar as opções.': 'Use o comando ajuda a qualquer momento para verificar as opções.',\r\n        'Limpar tela':'Limpar tela',\r\n        'limpar':'limpar',\r\n        'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso': 'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso',\r\n        'ajuda': 'ajuda',\r\n        'comecar':'comecar',\r\n        'aventura_start': 'Você olha para uma estrada deserta e se pergunta: \"O que estou fazendo aqui?\"',\r\n        \"aventura_continue_1\": 'Você começa a andar na estrada deserta.',\r\n\r\n      }\r\n    }\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: false,\r\n\r\n  // have a common namespace used around the full app\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n\r\n  keySeparator: false, // we use content as keys\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n    formatSeparator: \",\"\r\n  },\r\n\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nexport default i18n;","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\n\r\nexport default class Commands extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_menu() {\r\n        const global_context = this.context;\r\n        const commands = {\r\n            teste: {\r\n                description: 'WIP',\r\n                usage: global_context.i18n.t('teste'),\r\n                fn: function () { \r\n                    // global_context.terminal.state.stdout=[]\r\n                    console.log('global_context.terminal: ', global_context.terminal);\r\n                }\r\n            },\r\n            ajuda: {\r\n                description: global_context.i18n.t('Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso'),\r\n                usage: global_context.i18n.t('ajuda'),\r\n                fn: function () { \r\n                    global_context.terminal.showHelp()\r\n                }\r\n            },\r\n            limpar: {\r\n                description: global_context.i18n.t('Limpar tela'),\r\n                usage: global_context.i18n.t('limpar'),\r\n                fn: function () { \r\n                    global_context.terminal.state.stdout=[]\r\n                }\r\n            },\r\n            language: {\r\n                description: global_context.i18n.t('Trocar linguagem do sistema'),\r\n                usage: 'language <new_language:(en/pt-BR)>',\r\n                fn: function (newlang) { \r\n                    const valid_languages = ['en','pt-BR']\r\n                    if (!valid_languages.includes(newlang)) return <p>{global_context.i18n.t(\"Comando inválido!\")}<br/>{global_context.i18n.t(\"Exemplo do comando\")}<i>language</i> en</p>\r\n                    global_context.i18n.changeLanguage(newlang)\r\n                    window.location.reload(false);\r\n                }\r\n            },\r\n            lista: {\r\n                description: global_context.i18n.t('Lista de jogos instalados'),\r\n                usage: global_context.i18n.t('lista'),\r\n                fn: function () { \r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    const lista = []\r\n                    lista_jogos.forEach(nome_jogo => {\r\n                        lista.push(nome_jogo + ' : ' + global_context.jogos[nome_jogo].descricao)\r\n                    })\r\n                    return global_context.formatListResult(global_context.i18n.t('Lista de jogos instalados'), lista)\r\n                }\r\n            },\r\n            jogar: {\r\n                description: global_context.i18n.t('Jogar um dos jogos disponíveis na memória'),\r\n                usage: global_context.i18n.t('jogar <nome_do_jogo>'),\r\n                fn: function (nome_do_jogo) {\r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    if (!Number.isNaN(nome_do_jogo)){\r\n                        if(nome_do_jogo<=lista_jogos.length){\r\n                            global_context.jogos[lista_jogos[nome_do_jogo-1]].fn()\r\n                            return [lista_jogos[nome_do_jogo-1], <br/>, global_context.jogos[lista_jogos[nome_do_jogo-1]].descricao, <br/>, global_context.jogos[lista_jogos[nome_do_jogo-1]].instrucoes]\r\n                        }\r\n                    }\r\n                    if (lista_jogos.includes(nome_do_jogo)){\r\n                        global_context.jogos[nome_do_jogo].fn()\r\n                        return [nome_do_jogo, <br/>, global_context.jogos[nome_do_jogo].descricao, <br/>, global_context.jogos[nome_do_jogo].instrucoes]\r\n                    } else {\r\n                        return global_context.i18n.t('Jogo inválido, veja a lista de jogos.')\r\n                    }\r\n                }\r\n            },\r\n            login: {\r\n                description: global_context.i18n.t('Efetuar Login.'),\r\n                usage: global_context.i18n.t('login <usuario> <senha>'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>login</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (localStorage.getItem('@consolestation/usuario') === usuario &&\r\n                        localStorage.getItem('@consolestation/senha') === senha) {\r\n                            global_context.setUsuarioLogado(usuario);\r\n                            global_context.user = usuario;\r\n                            return global_context.i18n.t('Usuário logado!')\r\n                    }\r\n                    return <div><p>{global_context.i18n.t(\"Credenciais Inválidas!\")}</p>{exemplo_do_comando}</div>\r\n                }\r\n            },\r\n            registrar: {\r\n                description: global_context.i18n.t('Efetuar cadastro de usuário.'),\r\n                usage: global_context.i18n.t('registrar_example'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>{global_context.i18n.t(\"registrar\")}</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (!usuario || !senha) return <div><p>{global_context.i18n.t(\"Senha e Usuário requerido!\")}</p>{exemplo_do_comando}</div>\r\n                    if (senha.length !== 4) return <div><p>{global_context.i18n.t(\"Senha Inválida!\")}</p>{exemplo_do_comando}</div>\r\n                    if (usuario.length > 30 || usuario.length === 0) return <div><p>{global_context.i18n.t(\"Usuário Inválido!\")}</p>{exemplo_do_comando}</div>\r\n                    localStorage.setItem('@consolestation/usuario', usuario);\r\n                    localStorage.setItem('@consolestation/senha', senha);\r\n                    return <p>\r\n                        {global_context.i18n.t(\"Usuário registrado com sucesso!\")}<br/>\r\n                        {global_context.i18n.t(\"Usuário\")}: {usuario}<br/>\r\n                        {global_context.i18n.t(\"Senha\")}: {senha}<br/>\r\n                        {global_context.i18n.t(\"Faça o Login para usa-lo como usuário atual.\")}\r\n                    </p>\r\n                }\r\n            }\r\n        }    \r\n        if (localStorage.getItem('i18nextLng') === 'en') {\r\n            const commands_en = {\r\n                test: commands.teste,\r\n                help: commands.ajuda,\r\n                clear: commands.limpar,\r\n                language: commands.language,\r\n                list: commands.lista,\r\n                play: commands.jogar,\r\n                login: commands.login,\r\n                register: commands.registrar,\r\n\r\n            }\r\n            return commands_en\r\n        }\r\n        return commands\r\n    }\r\n\r\n    \r\n}","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\n\r\nexport default class Jogos extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_jogos() {\r\n        const global_context = this.context;\r\n        const finish_commands_config = (global_context, local_commands, local_commands_en) => {\r\n            const main_menu_commands = global_context.commands_instance.make_menu()\r\n                        if (localStorage.getItem('i18nextLng') === 'en'){\r\n                            local_commands_en.help = main_menu_commands.help\r\n                            local_commands_en.clear = main_menu_commands.clear\r\n                            global_context.setCommands(local_commands_en)\r\n                        } else {\r\n                            local_commands.ajuda = main_menu_commands.ajuda\r\n                            local_commands.limpar = main_menu_commands.limpar\r\n                            global_context.setCommands(local_commands)\r\n                        }\r\n        }\r\n        const jogos = {\r\n            pedra_papel_tesoura: {\r\n                'descricao': global_context.i18n.t('Jogo de pedra, papel e tesoura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura'),\r\n                fn: function () {\r\n                    const local_commands = {\r\n                        voltar: {\r\n                            description: global_context.i18n.t('Volta para o menu principal'),\r\n                            usage: global_context.i18n.t('voltar'),\r\n                            fn: function () {\r\n                                global_context.setCommands(global_context.commands_instance.make_menu());\r\n                                return global_context.i18n.t('Voltando ao menu principal!')\r\n                            }\r\n                        },\r\n                        usar: {\r\n                            description: global_context.i18n.t('Joga contra o computador usando pedra, papel ou tesoura'),\r\n                            usage: global_context.i18n.t('usar <pedra ou papel ou tesoura>'),\r\n                            fn: function (jogada) {\r\n                                const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}: <i>usar</i> {global_context.i18n.t(\"pedra\")}</p>\r\n                                const opcoes = [global_context.i18n.t('pedra'), global_context.i18n.t('papel'), global_context.i18n.t('tesoura')];\r\n                                const resultado = []\r\n                                if (opcoes.includes(jogada)) {\r\n                                    const jogada_ai = opcoes[global_context.getRndInteger(0,2)]\r\n                                    var venceu_ou_empate = false\r\n                                    resultado.push(global_context.i18n.t(\"sua_jogada\")+jogada)\r\n                                    resultado.push(global_context.i18n.t(\"ai_jogada\")+jogada_ai)                                \r\n                                    if (jogada_ai === jogada) {\r\n                                        resultado.push(global_context.i18n.t(\"Um empate!\"))\r\n                                        venceu_ou_empate=true\r\n                                    }\r\n                                    else {\r\n                                        switch (jogada) {\r\n                                            case global_context.i18n.t('pedra'):\r\n                                                if (jogada_ai===global_context.i18n.t('tesoura')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n        \r\n                                            case global_context.i18n.t('papel'):\r\n                                                if (jogada_ai===global_context.i18n.t('pedra')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n        \r\n                                            case global_context.i18n.t('tesoura'):\r\n                                                if (jogada_ai===global_context.i18n.t('papel')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n                                        \r\n                                            default:\r\n                                                break;\r\n                                        }\r\n                                    }\r\n                                    if (!venceu_ou_empate) resultado.push(global_context.i18n.t(\"Você perdeu!\"))\r\n                                    return <div>{global_context.formatScoreResult(resultado)}</div>\r\n                                }\r\n                                return <div><p>{global_context.i18n.t(\"Opção de jogada inválida!\")}</p>{exemplo_do_comando}</div>\r\n                            }\r\n                        },\r\n                    }\r\n                    const local_commands_en ={\r\n                        back: local_commands.voltar,\r\n                        use: local_commands.usar,\r\n                    }\r\n                    finish_commands_config(global_context, local_commands, local_commands_en)                   \r\n                }\r\n            },\r\n            flip_a_coin: {\r\n                'descricao': global_context.i18n.t('Cara ou coroa?'),\r\n                'instrucoes': global_context.i18n.t('Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa'),\r\n                fn: function () {\r\n                    const local_commands = {\r\n                        voltar: {\r\n                            description: global_context.i18n.t('Volta para o menu principal'),\r\n                            usage: global_context.i18n.t('voltar'),\r\n                            fn: function () {\r\n                                global_context.setCommands(global_context.commands_instance.make_menu());\r\n                                return global_context.i18n.t('Voltando ao menu principal!')\r\n                            }\r\n                        },\r\n                        jogar: {\r\n                            description: global_context.i18n.t('Joga uma moeda'),\r\n                            usage: global_context.i18n.t('jogar'),\r\n                            fn: function () {\r\n                                switch (global_context.getRndInteger(0,1)) {\r\n                                    case 0:\r\n                                        return global_context.formatScoreResult([\r\n                                            global_context.i18n.t('A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado'), \r\n                                            '-',\r\n                                            global_context.i18n.t('resultado_cara')]);\r\n                                    case 1:\r\n                                        const rare_message = global_context.getRndInteger(0,99);\r\n                                        var hidden = '';\r\n                                        if (rare_message > 90) {\r\n                                            hidden = global_context.i18n.t('passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ')\r\n                                        }\r\n                                        return global_context.formatScoreResult([\r\n                                            global_context.i18n.t('A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,')+\r\n                                            hidden+\r\n                                            global_context.i18n.t(' e quando chega vê o resultado'), \r\n                                            '-', \r\n                                            global_context.i18n.t('resultado_coroa')]);\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                    const local_commands_en ={\r\n                        back: local_commands.voltar,\r\n                        flip: local_commands.jogar,\r\n                    }\r\n                    finish_commands_config(global_context, local_commands, local_commands_en)\r\n                }\r\n            },\r\n            a_aventura: {\r\n                'descricao': global_context.i18n.t('Comece sua aventura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando ajuda a qualquer momento para verificar as opções.'),\r\n                fn: function () {\r\n                    const voltar_option = {\r\n                        description: global_context.i18n.t('Volta para o menu principal'),\r\n                        usage: global_context.i18n.t('voltar'),\r\n                        fn: function () {\r\n                            global_context.setCommands(global_context.commands_instance.make_menu());\r\n                            return global_context.i18n.t('Voltando ao menu principal!')\r\n                        }\r\n                    }\r\n                    const local_commands = {\r\n                        voltar: voltar_option,\r\n                        comecar: {\r\n                            description: global_context.i18n.t('Começar aventura'),\r\n                            usage: global_context.i18n.t('comecar'),\r\n                            fn: function () {\r\n                                const new_menu = {\r\n                                    voltar: voltar_option,\r\n                                    continuar: {\r\n                                        description: global_context.i18n.t('Continuar aventura'),\r\n                                        usage: global_context.i18n.t('continuar'),\r\n                                        fn: function () {\r\n                                            return global_context.i18n.t(\"aventura_continue_1\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                                const new_menu_en ={\r\n                                    back: voltar_option,\r\n                                    continue: new_menu.continuar,\r\n                                }\r\n                                finish_commands_config(global_context, new_menu, new_menu_en)\r\n                                global_context.terminal.state.stdout=[]\r\n                                return global_context.i18n.t('aventura_start')\r\n                            }\r\n                        },\r\n                    }\r\n                    const local_commands_en ={\r\n                        back: local_commands.voltar,\r\n                        start: local_commands.comecar,\r\n                    }\r\n                    finish_commands_config(global_context, local_commands, local_commands_en)\r\n                }\r\n            },\r\n        }\r\n        if (localStorage.getItem('i18nextLng') === 'en') {\r\n            const jogos_en = {\r\n                rock_paper_scissors: jogos.pedra_papel_tesoura,\r\n                flip_a_coin: jogos.flip_a_coin,\r\n                the_adventure: jogos.a_aventura,\r\n            }\r\n            return jogos_en\r\n        }\r\n        return jogos\r\n    }\r\n\r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport './main.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConsolePage from './pages/console';\r\nimport { GlobalContextProvider } from './helpers/GlobalContext';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nimport Commands from './classes/commands';\r\nimport Jogos from './classes/jogos';\r\n\r\ntoast.configure()\r\n\r\nexport default props => {\r\n    const [actual_page, setPage] = useState(<ConsolePage />);\r\n    const [global_context, setGlobalContext] = useState({});\r\n    const [terminal, setTerminal] = useState();\r\n\r\n    global_context.setPage = setPage;\r\n    global_context.user = 'user';\r\n    global_context.i18n = i18n;\r\n    global_context.terminal = terminal;\r\n    global_context.setTerminal = setTerminal;\r\n    global_context.commands_instance = new Commands({'context': global_context})\r\n    global_context.jogos_instance = new Jogos({'context': global_context})\r\n\r\n    return <div className='wrapper'>            \r\n                <GlobalContextProvider value={{global_context, setGlobalContext}}>\r\n                    <I18nextProvider i18n={i18n}>\r\n                        {actual_page}\r\n                    </I18nextProvider>\r\n                </GlobalContextProvider>\r\n        </div>\r\n        \r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './main/app'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}