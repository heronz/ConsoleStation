{"version":3,"sources":["main/helpers/GlobalContext.jsx","main/classes/utils.jsx","main/components/AventuraGame.jsx","main/pages/console.jsx","i18n.js","main/classes/commands.jsx","main/classes/jogos.jsx","main/app.jsx","index.jsx"],"names":["GlobalContext","React","createContext","GlobalContextProvider","Provider","getRndInteger","min","max","Math","floor","random","props","useContext","global_context","game_btns","setGlobalContext","Button","variant","onClick","update_textLog","i18n","t","add_button_to_button_group","remove_button_from_button_group","event_states","event_countdown2","button_group_copy","includes","event_countdown","updated","olhar_events","length","push","updated_timed_events","audio","Audio","process","play","setTimeout","pause","text_log_copy","repeat","useState","text_log","setTextLog","button_group","setButtonGroup","textLog","createRef","new_line","separator","local_text_log","Array","from","new_button","clear","local_button_group","old_button","splice","indexOf","useEffect","current","scrollTop","scrollHeight","Card","style","width","color","backgroundColor","Header","Form","Control","ref","as","rows","autocorrect","spellcheck","resize","border","value","join","onChange","console","log","Body","Title","fontWeight","className","terminal","terminalInput","disabled","formatScoreResult","lines","size","result_size","filler_char","filler_line","header","footer","transform","formated_lines","forEach","line","fillers","teve_splice","sliced_lines","slice","i","pop","lineHeight","formatListResult","title","itens","list","List","component","aria-label","ListItem","ListItemText","primary","map","item","inset","user","usuario_logado","setUsuarioLogado","jogos_instance","make_jogos","jogos","setJogos","commands_instance","make_menu","commands","setCommands","terminal_ref","setTerminal","aventura_game_component","AventuraGame","Row","marginLeft","welcomeMessage","Image","src","rounded","marginBottom","promptLabel","commandCallback","result","next_callback","dangerMode","noDefaults","promptLabelStyle","height","margin","minWidth","minHeight","position","borderRadius","top","bottom","left","right","borderBottom","borderRight","contentStyle","use","LanguageDetector","init","resources","translations","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","Commands","context","state","this","teste","description","usage","fn","stdout","pushToStdout","ajuda","showHelp","limpar","language","newlang","changeLanguage","window","location","reload","lista","lista_jogos","Object","keys","nome_jogo","descricao","jogar","nome_do_jogo","exemplo_do_comando","Number","isNaN","instrucoes","login","usuario","senha","localStorage","getItem","registrar","setItem","test","help","register","Component","contextType","Jogos","finish_commands_config","local_commands","local_commands_en","main_menu_commands","voltar_option","pedra_papel_tesoura","voltar","usar","jogada","opcoes","resultado","jogada_ai","venceu_ou_empate","back","jogue_a_moeda","hidden","flip","a_aventura","comecar","start","rock_paper_scissors","flip_a_coin","the_adventure","toast","configure","actual_page","setPage","global_state","setGlobalState","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4d97e79.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nconst GlobalContextProvider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport { GlobalContextProvider as GlobalContextProvider };","export function getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import React, {useState, useContext, useEffect} from 'react'\r\nimport { Card, Form, Button, Image, Row, Col, Container } from 'react-bootstrap'\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { getRndInteger } from '../classes/utils';\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const game_btns = [\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t('aventura_continue_1'));\r\n                add_button_to_button_group(game_btns[1], true)\r\n                }}>{global_context.i18n.t('Levantar')}</Button>,\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => {\r\n                remove_button_from_button_group(game_btns[2]);\r\n                update_textLog(global_context.i18n.t('aventura_continue_2'));\r\n                if (event_states.event_countdown2 == 0) {\r\n                    if(!button_group_copy.includes(game_btns[2]) && event_states.event_countdown ===0) {\r\n                        add_button_to_button_group(game_btns[2])\r\n                        update_textLog(global_context.i18n.t('you_see_something'));\r\n                    }\r\n                    else {\r\n                        if (event_states.event_countdown > 0) event_states.event_countdown--\r\n                        else event_states.event_countdown = 2\r\n                    }\r\n                    event_states.event_countdown2 = getRndInteger(3,6);\r\n                }\r\n                else {\r\n                    event_states.event_countdown2--\r\n                }\r\n                }}>{global_context.i18n.t('Continuar')}</Button>,\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => {\r\n                var updated = false;\r\n                if (event_states.olhar_events.length === 0 || (event_states.olhar_events[2])) {\r\n                    update_textLog(global_context.i18n.t('aventura_olhar_1'));\r\n                    event_states.olhar_events.push(true)\r\n                    updated = true\r\n                }\r\n                if (event_states.olhar_events[0] && !updated){\r\n                    event_states.olhar_events[0] = false\r\n                    event_states.olhar_events.push(true)\r\n                    if (!updated_timed_events[0]) {\r\n                        const audio = new Audio(process.env.PUBLIC_URL + \"/sounds/spooky2.wav\")\r\n                        audio.play()\r\n                        setTimeout(() => {audio.pause()}, 6000)\r\n                        updated_timed_events[0] = true\r\n                    }\r\n                    setTimeout(() => update_textLog(global_context.i18n.t('aventura_olhar_2')), 500)\r\n                    update_textLog(global_context.i18n.t('Você olha...'))\r\n                    updated = true\r\n                }\r\n                if (event_states.olhar_events[1] && !updated){\r\n                    event_states.olhar_events[1] = false\r\n                    event_states.olhar_events.push(true)\r\n                    if (!updated_timed_events[1]) {\r\n                        const audio = new Audio(process.env.PUBLIC_URL + \"/sounds/spooky.wav\")\r\n                        audio.play()\r\n                        setTimeout(() => {audio.pause()}, 6000)\r\n                        updated_timed_events[1] = true\r\n                    }\r\n                    setTimeout(() => update_textLog(global_context.i18n.t('aventura_olhar_3')), 500)\r\n                    update_textLog(global_context.i18n.t('Você olha...'))\r\n                    updated = true\r\n                }\r\n                remove_button_from_button_group(game_btns[2])\r\n            }}>{global_context.i18n.t('olhar')}</Button>,\r\n    ]\r\n    var button_group_copy = [game_btns[0]]\r\n    var text_log_copy = [global_context.i18n.t('aventura_start'), \"-\".repeat(15)]\r\n    var updated_timed_events = [false, false]\r\n    var event_states = {\r\n        olhar_events: [],\r\n        event_countdown: 0,\r\n        event_countdown2: 0,\r\n    }\r\n    const [text_log, setTextLog] = useState([global_context.i18n.t('aventura_start'), \"-\".repeat(15)])\r\n    const [button_group, setButtonGroup] = useState([game_btns[0]])\r\n    const textLog = React.createRef();\r\n\r\n    const update_textLog = (new_line) => {\r\n        const separator = \"-\".repeat(15)\r\n        const local_text_log = Array.from(text_log_copy)\r\n        local_text_log.push(new_line)\r\n        local_text_log.push(separator)\r\n        setTextLog(local_text_log)\r\n        text_log_copy=local_text_log\r\n    }\r\n\r\n    const add_button_to_button_group = (new_button, clear=false) => {\r\n        var local_button_group = [];\r\n        if (!clear) {\r\n            local_button_group = Array.from(button_group_copy)\r\n        }\r\n        if (!local_button_group.includes(new_button)) local_button_group.push(new_button);\r\n        setButtonGroup(local_button_group)\r\n        button_group_copy = local_button_group\r\n    }\r\n\r\n    const remove_button_from_button_group = (old_button) => {\r\n        const local_button_group = Array.from(button_group_copy)\r\n\r\n        if (local_button_group.includes(old_button)){\r\n            local_button_group.splice(local_button_group.indexOf(old_button, 1));\r\n            setButtonGroup(local_button_group)\r\n            button_group_copy = local_button_group\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        textLog.current.scrollTop = textLog.current.scrollHeight;\r\n    })\r\n\r\n    return <Card style={{ width: '80vw', color: \"white\", backgroundColor: \"#092777cf\" }}>\r\n                <Card.Header variant=\"top\">\r\n                    <Form.Control \r\n                        ref={textLog}\r\n                        as=\"textarea\" \r\n                        rows=\"10\"  \r\n                        autocorrect=\"off\"\r\n                        spellcheck=\"false\"\r\n                        style={{ resize: 'none', backgroundColor: \"#161616\", color: \"#0D0\", border: \"inset #0b2d88cf 15px\" }} \r\n                        value={text_log.join('\\n')}\r\n                        onChange={() => {\r\n                            this.textLog.current.scrollTop = this.textLog.current.scrollHeight;\r\n                            console.log('this: ', this);\r\n                        }}/>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title style={{fontWeight: \"bold\"}}>Adventure Game</Card.Title>\r\n                    <div className='aventura-game-button-div'>\r\n                        {button_group}\r\n                    </div>\r\n                    <div className='aventura-game-button-div'>\r\n                        <Button \r\n                            variant=\"primary\" \r\n                            onClick={() => {\r\n                                global_context.terminal.terminalInput.current.disabled = !global_context.terminal.terminalInput.current.disabled\r\n                                // console.log('global_context.terminal: ', global_context.terminal);\r\n                                }}>{global_context.i18n.t('Ligar/Desligar input do terminal')}</Button>\r\n                    </div>\r\n                    {/* <div className='aventura-game-button-div'>\r\n                        <Container fluid style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"55vw\" }}>\r\n                            <Row xs={{span: 6}} style={{ paddingLeft: 0, paddingRight: 0, alignItems: \"center\", border: \"medium ridge #404040\" }}>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0}}>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/game_icons/1 gold.png\"} rounded style={{width: \"40px\", height: \"40px\", margin: 0}}/>\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                    999\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0, border: \"ridge #404040\", borderWidth: \"0 0 0 medium\" }}>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/game_icons/2 simple sword.png\"} rounded style={{width: \"40px\", height: \"40px\", margin: 0}}/>\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                    999\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0, border: \"ridge #404040\", borderWidth: \"0 0 0 medium\" }}>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/game_icons/gem.png\"} rounded style={{width: \"40px\", height: \"40px\", margin: 0}}/>\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                    999\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div> */}\r\n                </Card.Body>\r\n            </Card>\r\n}","import React, {useState, useContext, useEffect} from 'react';\r\nimport Terminal from 'react-console-emulator'\r\nimport { Button, Row, Image, Card, Form} from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AventuraGame from '../components/AventuraGame';\r\nimport { getRndInteger } from '../classes/utils';\r\n\r\nfunction formatScoreResult(lines = [], size=35) {\r\n    const result_size = size\r\n    const filler_char = '+'\r\n    const filler_line = <div>|{filler_char.repeat(result_size-2)}|<br/></div>\r\n    var header =<div>{'_'.repeat(result_size)}<br/>{filler_line}</div>\r\n    var footer =<div>{filler_line}<div style={{transform: \"rotate(180deg)\", width: \"max-content\"}}>{'_'.repeat(result_size)}</div></div>\r\n    var formated_lines = []\r\n    lines.forEach((line) => {\r\n        var fillers = result_size-4-line.length\r\n        var teve_splice = false\r\n        if (line.length < result_size) {\r\n            formated_lines.push(<div>|{filler_char.repeat(Math.floor(fillers/2))} {line} {filler_char.repeat(Math.floor(fillers/2)+(fillers%2===1?1:0))}|<br/></div>)\r\n        } else {\r\n            teve_splice = true\r\n            const sliced_lines = Math.floor(line.length/ (result_size-4))+1\r\n            var slice = ''\r\n            var i=0\r\n            while(i<sliced_lines){\r\n                slice = line.slice(((result_size-2)*i), ((result_size-2)*(i+1)))\r\n                fillers = result_size-2-slice.length\r\n                formated_lines.push(<div>|{slice}{filler_char.repeat(Math.floor(fillers))}|<br/></div>)\r\n                i++\r\n            }\r\n            formated_lines.push(filler_line)\r\n        }\r\n        if (teve_splice) formated_lines.pop()\r\n    })\r\n    return <p style={{lineHeight:'13px'}}>{header} {formated_lines} {footer}</p>\r\n}\r\n\r\nfunction formatListResult(title='', itens = []) {\r\n    var i=0;\r\n    const list = <List component=\"nav\" className=\"list-format\" aria-label=\"contacts\">\r\n                    <ListItem className=\"title\">\r\n                        <ListItemText primary={title} />\r\n                    </ListItem>\r\n                    {itens.map(item => {\r\n                        i++;\r\n                        return <ListItem >\r\n                            {i}\r\n                            <ListItemText inset primary={item} />\r\n                        </ListItem>\r\n                    })}\r\n                </List>\r\n    return list\r\n}\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const [usuario_logado, setUsuarioLogado] = useState(global_context.user);\r\n    const [jogos, setJogos] = useState(global_context.jogos_instance.make_jogos());\r\n    const [commands, setCommands] = useState(global_context.commands_instance.make_menu());\r\n    const terminal_ref = React.createRef()\r\n    useEffect(() => {\r\n        global_context.setTerminal(terminal_ref.current);\r\n        global_context.jogos= jogos\r\n        global_context.formatScoreResult = formatScoreResult\r\n        global_context.formatListResult = formatListResult\r\n        global_context.setUsuarioLogado = setUsuarioLogado\r\n        global_context.setCommands = setCommands\r\n        global_context.setJogos = setJogos\r\n        global_context.getRndInteger = getRndInteger\r\n        global_context.aventura_game_component = <AventuraGame />\r\n    })\r\n    \r\n    const callback_terminal = (result) => {\r\n        if (global_context.next_callback) global_context.next_callback()\r\n    };\r\n\r\n    return (\r\n          <div className=\"content-console\">\r\n              <div className=\"win-bar\">\r\n                  <Row>\r\n                    <h3 style={{marginLeft: \"2vh\"}}>ConsoleStation</h3>\r\n                    <div className=\"win-control-buttons\">\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><MinimizeIcon /></Button>\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><CloseIcon /></Button>\r\n                    </div>\r\n                  </Row>\r\n                  <Row>\r\n                    <Terminal\r\n                    ref={terminal_ref}\r\n                    commands={commands}\r\n                    welcomeMessage={<div>\r\n                            <p>\r\n                            <Image src={process.env.PUBLIC_URL + \"/cs-logo.png\"} rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                            <h3>{global_context.i18n.t(\"Seja bem vindo ao ConsoleStation\")}</h3><br/>\r\n                            {global_context.i18n.t(\"Para ver uma lista de comandos digite \")}<i>{global_context.i18n.t(\"ajuda\")}</i><br/>\r\n                            {global_context.i18n.t(\"Para limpar o terminal digite \")}<i>{global_context.i18n.t(\"limpar\")}</i>                            \r\n                            </p>\r\n                        </div>}\r\n                    promptLabel={usuario_logado + '@Consolestation:~$'}\r\n                    commandCallback={callback_terminal}\r\n                    dangerMode\r\n                    noDefaults\r\n                    promptLabelStyle={{\r\n                        color: \"#6890ff\"\r\n                    }}\r\n                    style={{\r\n                        width:\"98%\", \r\n                        height:\"92%\", \r\n                        margin:\"50px auto\",\r\n                        minWidth: \"98%\", \r\n                        minHeight: \"2%\",\r\n                        position: \"absolute\",\r\n                        borderRadius: \"0 0 5px 5px\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        borderBottom: 'solid',\r\n                        borderRight: 'solid'\r\n                        }}\r\n                    contentStyle={{\r\n                        height: \"95%\"\r\n                    }}\r\n                    />\r\n                  </Row>\r\n              </div>\r\n          </div>\r\n      )\r\n    }","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  // we init with resources\r\n  resources: {\r\n    'en': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Welcome to ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"To see a list of commands use \",\r\n        \"Para limpar o terminal digite \": \"To clear the terminal use \",\r\n        'Trocar linguagem do sistema': 'Change system language',\r\n        \"Comando inválido!\": \"Command Invalid\",\r\n        \"Exemplo do comando\": \"Command example: \",\r\n        'Lista de jogos instalados': 'List of installed games',\r\n        'Jogar um dos jogos disponíveis na memória': 'Play one of the installed games',\r\n        'jogar <nome_do_jogo>': 'play <game_name>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Invalid game, see the list of installed games.',\r\n        'Efetuar Login.': 'Make login.',\r\n        'login <usuario> <senha>': 'login <user> <password>',\r\n        \"Nome_de_Usuario\": \"Username\",\r\n        'Usuário logado!': 'Login success!',\r\n        \"Credenciais Inválidas!\": \"Invalid login information!\",\r\n        'Efetuar cadastro de usuário.': 'Register new user.',\r\n        'registrar_example': 'register <user: 30 characters max> <password: Exactly 4 characters>',\r\n        \"Senha e Usuário requerido!\": \"User and password required\",\r\n        \"Senha Inválida!\": \"Invalid password\",\r\n        \"Usuário Inválido!\": \"Invalid user\",\r\n        \"Usuário registrado com sucesso!\": \"User registration successfull!\",\r\n        \"Usuário\": \"user\",\r\n        \"Senha\": \"password\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Make login to use it\",\r\n        'Jogo de pedra, papel e tesoura': 'Rock, paper and scissors',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use command use <choice> to play against me, the choice can be rock, paper or scissors',\r\n        'Volta para o menu principal': 'Go to main menu',\r\n        'Voltando ao menu principal!': 'Going to main menu',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Play against the computer using rock, paper or scissors',\r\n        'usar <pedra ou papel ou tesoura>': 'use <rock or paper or scissors>',\r\n        'pedra': 'rock',\r\n        'papel': 'paper',\r\n        'tesoura': 'scissors',\r\n        \"sua_jogada\": \"Your move: \",\r\n        \"ai_jogada\": \"My move(AI): \",\r\n        \"Um empate!\": \"A draw\",\r\n        \"Você ganhou!\": \"You win\",\r\n        \"Você perdeu!\": \"You lose\",\r\n        \"Opção de jogada inválida!\": \"Invalid choice\",\r\n        'Cara ou coroa?': 'Heads or Tails?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': \"Use flip to flip a coin and see if it's heads or tails\",\r\n        'Joga uma moeda': 'Flip a coin into the air',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'The coin flips in the air for some time and then hits the ground, you stand and go see what landed',\r\n        'resultado_cara': 'Result: Heads',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': \"go trough a unknown figure that wasn't there 5 minutes before, \",\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'The coin flips in the air for some time, bouncing on the ground before landing a little too far, you run after it, ',\r\n        ' e quando chega vê o resultado': ' and when you catch it you see what landed',\r\n        'resultado_coroa': 'Result: Tails',\r\n        'teste': 'test',\r\n        'lista': 'list',\r\n        \"registrar\": \"register\",\r\n        'voltar': 'back',\r\n        'jogar': 'flip',\r\n        'Comece sua aventura': 'Start the adventure',\r\n        'Use o comando ajuda a qualquer momento para verificar as opções.': 'Use the help command at any moment to see the options.',\r\n        'Limpar tela':'Clear screen',\r\n        'limpar':'clear',\r\n        'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso': 'Lists all commands avaliable with a brief description and use example',\r\n        'ajuda': 'help',\r\n        'comecar':'start',\r\n        'aventura_start': 'You look to the empty road in front of you and think: \"What am I doing here?\"',\r\n        \"aventura_continue_1\": 'You stand up and start to walk on the road',\r\n        \"aventura_continue_2\": \"You continue to walk on the road\",\r\n        'Olhar a sua volta': 'Look around you',\r\n        'olhar': 'Look',\r\n        \"aventura_olhar_1\": \"At your right on the horizon there's a dense forest, at your left you see a mountain with snow at the top, ahead you see a empty road.\",\r\n        \"aventura_olhar_2\": \"You see the trees moving on the forest by your right, seems like something big is there.\",\r\n        \"aventura_olhar_3\": \"Wait, is there someone waving on the top of that mountain? *rubs eyes* Was only my imagination?\",\r\n        \"you_see_something\": \"What was that?\",\r\n        'Levantar': 'Stand up',\r\n        'Continuar': 'Continue',\r\n        'carregando': 'Loading...',\r\n        'Ligar/Desligar input do terminal': 'Toggle input terminal',\r\n        'Você olha...': 'You look...',\r\n\r\n      }\r\n    },\r\n    'pt-BR': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Seja bem vindo ao ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"Para ver a lista de comandos use \",\r\n        \"Para limpar o terminal digite \": \"Para limpar o terminal use \",\r\n        'Trocar linguagem do sistema': 'Trocar linguagem do sistema',\r\n        \"Comando inválido!\":\"Comando inválido\",\r\n        \"Exemplo do comando\":\"Exemplo do comando: \",\r\n        'Lista de jogos instalados': 'Lista de jogos instalados',\r\n        'Jogar um dos jogos disponíveis na memória': 'Jogar um dos jogos disponíveis na memória',\r\n        'jogar <nome_do_jogo>': 'jogar <nome_do_jogo>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Jogo inválido, veja a lista de jogos disponíveis.',\r\n        'Efetuar Login.': 'Efetuar Login.',\r\n        'login <usuario> <senha>': 'login <usuario> <senha>',\r\n        \"Nome_de_Usuario\": \"Nome_de_Usuario\",\r\n        'Usuário logado!': 'Usuário logado!',\r\n        \"Credenciais Inválidas!\": \"Credenciais Inválidas!\",\r\n        'Efetuar cadastro de usuário.': 'Efetuar cadastro de usuário.',\r\n        'registrar_example': 'registrar <usuario: Máximo de 30 caracteres> <senha: Apenas 4 caracteres>',\r\n        \"Senha e Usuário requerido!\": \"Senha e Usuário requerido!\",\r\n        \"Senha Inválida!\": \"Senha Inválida!\",\r\n        \"Usuário Inválido!\": \"Usuário Inválido!\",\r\n        \"Usuário registrado com sucesso!\": \"Usuário registrado com sucesso!\",\r\n        \"Usuário\": \"Usuário\",\r\n        \"Senha\": \"Senha\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Faça o Login para usa-lo como usuário atual.\",\r\n        'Jogo de pedra, papel e tesoura': 'Jogo de pedra, papel e tesoura',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura',\r\n        'Volta para o menu principal': 'Volta para o menu principal',\r\n        'Voltando ao menu principal!': 'Voltando ao menu principal!',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Joga contra o computador usando pedra, papel ou tesoura',\r\n        'usar <pedra ou papel ou tesoura>': 'usar <pedra ou papel ou tesoura>',\r\n        'pedra': 'pedra',\r\n        'papel': 'papel',\r\n        'tesoura': 'tesoura',\r\n        \"sua_jogada\": \"Sua Jogada: \",\r\n        \"ai_jogada\": \"Minha jogada(AI): \",\r\n        \"Um empate!\": \"Um empate!\",\r\n        \"Você ganhou!\": \"Você ganhou!\",\r\n        \"Você perdeu!\": \"Você perdeu!\",\r\n        \"Opção de jogada inválida!\": \"Opção de jogada inválida!\",\r\n        'Cara ou coroa?': 'Cara ou coroa?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': 'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa',\r\n        'Joga uma moeda': 'Joga uma moeda',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado',\r\n        'resultado_cara': 'Resultado: Cara',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': 'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ',\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,',\r\n        ' e quando chega vê o resultado': ' e quando chega vê o resultado',\r\n        'resultado_coroa': 'Resultado: Coroa',\r\n        'teste': 'teste',\r\n        'lista': 'lista',\r\n        \"registrar\": \"registrar\",\r\n        'voltar': 'voltar',\r\n        'jogar': 'jogar',\r\n        'Comece sua aventura': 'Comece sua aventura',\r\n        'Use o comando ajuda a qualquer momento para verificar as opções.': 'Use o comando ajuda a qualquer momento para verificar as opções.',\r\n        'Limpar tela':'Limpar tela',\r\n        'limpar':'limpar',\r\n        'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso': 'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso',\r\n        'ajuda': 'ajuda',\r\n        'comecar':'comecar',\r\n        'aventura_start': 'Você olha para uma estrada deserta e se pergunta: \"O que estou fazendo aqui?\"',\r\n        \"aventura_continue_1\": 'Você levanta e começa a andar na estrada deserta.',\r\n        \"aventura_continue_2\": \"Você continua a andar na estrada\",\r\n        'Olhar a sua volta': 'Olhar a sua volta',\r\n        'olhar': 'Olhar',\r\n        \"aventura_olhar_1\": \"A sua direita no horizonte você vê uma floresta densa, a sua esquerda você vê uma montanha com neve no topo, a frente uma estrada deserta.\",\r\n        \"aventura_olhar_2\": \"Você vê as arvores da floresta a direita se mexendo, parece que algo grande está se movimentando por ali.\",\r\n        \"aventura_olhar_3\": '\"Espera, tem alguém acenando no topo daquela montanha? *esfrega o olho* Foi só minha imaginação?.\"',\r\n        \"you_see_something\": '\"O que foi isso?\"',\r\n        'Levantar': 'Levantar',\r\n        'Continuar': 'Continuar',\r\n        'carregando': 'Carregando...',\r\n        'Ligar/Desligar input do terminal': 'Alternar input do terminal',\r\n        'Você olha...': 'Você olha...',\r\n\r\n      }\r\n    }\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: false,\r\n\r\n  // have a common namespace used around the full app\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n\r\n  keySeparator: false, // we use content as keys\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n    formatSeparator: \",\"\r\n  },\r\n\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nexport default i18n;","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\n\r\nexport default class Commands extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_menu() {\r\n        const global_context = this.context;\r\n        const commands = {\r\n            teste: {\r\n                description: 'WIP',\r\n                usage: global_context.i18n.t('teste'),\r\n                fn: function () { \r\n                    // global_context.terminal.state.stdout=[]\r\n                    // console.log('global_context.terminal: ', global_context.terminal);\r\n                    global_context.terminal.state.stdout=[]\r\n                        const terminal = global_context.terminal\r\n                        setTimeout(() => {\r\n                            global_context.terminal.state.stdout=[]\r\n                            terminal.pushToStdout(global_context.aventura_game_component)\r\n                        }, 1500)\r\n                        return  <p>\r\n                                    {global_context.i18n.t('carregando')}\r\n                                </p>\r\n                }\r\n            },\r\n            ajuda: {\r\n                description: global_context.i18n.t('Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso'),\r\n                usage: global_context.i18n.t('ajuda'),\r\n                fn: function () { \r\n                    global_context.terminal.showHelp()\r\n                }\r\n            },\r\n            limpar: {\r\n                description: global_context.i18n.t('Limpar tela'),\r\n                usage: global_context.i18n.t('limpar'),\r\n                fn: function () { \r\n                    global_context.terminal.state.stdout=[]\r\n                }\r\n            },\r\n            language: {\r\n                description: global_context.i18n.t('Trocar linguagem do sistema'),\r\n                usage: 'language <new_language:(en/pt-BR)>',\r\n                fn: function (newlang) { \r\n                    const valid_languages = ['en','pt-BR']\r\n                    if (!valid_languages.includes(newlang)) return <p>{global_context.i18n.t(\"Comando inválido!\")}<br/>{global_context.i18n.t(\"Exemplo do comando\")}<i>language</i> en</p>\r\n                    global_context.i18n.changeLanguage(newlang)\r\n                    window.location.reload(false);\r\n                }\r\n            },\r\n            lista: {\r\n                description: global_context.i18n.t('Lista de jogos instalados'),\r\n                usage: global_context.i18n.t('lista'),\r\n                fn: function () { \r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    const lista = []\r\n                    lista_jogos.forEach(nome_jogo => {\r\n                        lista.push(nome_jogo + ' : ' + global_context.jogos[nome_jogo].descricao)\r\n                    })\r\n                    return global_context.formatListResult(global_context.i18n.t('Lista de jogos instalados'), lista)\r\n                }\r\n            },\r\n            jogar: {\r\n                description: global_context.i18n.t('Jogar um dos jogos disponíveis na memória'),\r\n                usage: global_context.i18n.t('jogar <nome_do_jogo>'),\r\n                fn: function (nome_do_jogo) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>{global_context.i18n.t(\"jogar\")}</i> 1</p>\r\n                    if (!nome_do_jogo) return <div><p>{global_context.i18n.t('Jogo inválido, veja a lista de jogos.')}</p>{exemplo_do_comando}</div>\r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    if (!Number.isNaN(nome_do_jogo)){\r\n                        if(nome_do_jogo<=lista_jogos.length){\r\n                            global_context.jogos[lista_jogos[nome_do_jogo-1]].fn()\r\n                            return [lista_jogos[nome_do_jogo-1], <br/>, global_context.jogos[lista_jogos[nome_do_jogo-1]].descricao, <br/>, global_context.jogos[lista_jogos[nome_do_jogo-1]].instrucoes]\r\n                        }\r\n                    }\r\n                    if (lista_jogos.includes(nome_do_jogo)){\r\n                        global_context.jogos[nome_do_jogo].fn()\r\n                        return [nome_do_jogo, <br/>, global_context.jogos[nome_do_jogo].descricao, <br/>, global_context.jogos[nome_do_jogo].instrucoes]\r\n                    } else {\r\n                        return global_context.i18n.t('Jogo inválido, veja a lista de jogos.')\r\n                    }\r\n                }\r\n            },\r\n            login: {\r\n                description: global_context.i18n.t('Efetuar Login.'),\r\n                usage: global_context.i18n.t('login <usuario> <senha>'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>login</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (localStorage.getItem('@consolestation/usuario') === usuario &&\r\n                        localStorage.getItem('@consolestation/senha') === senha) {\r\n                            global_context.setUsuarioLogado(usuario);\r\n                            global_context.user = usuario;\r\n                            return global_context.i18n.t('Usuário logado!')\r\n                    }\r\n                    return <div><p>{global_context.i18n.t(\"Credenciais Inválidas!\")}</p>{exemplo_do_comando}</div>\r\n                }\r\n            },\r\n            registrar: {\r\n                description: global_context.i18n.t('Efetuar cadastro de usuário.'),\r\n                usage: global_context.i18n.t('registrar_example'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>{global_context.i18n.t(\"registrar\")}</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (!usuario || !senha) return <div><p>{global_context.i18n.t(\"Senha e Usuário requerido!\")}</p>{exemplo_do_comando}</div>\r\n                    if (senha.length !== 4) return <div><p>{global_context.i18n.t(\"Senha Inválida!\")}</p>{exemplo_do_comando}</div>\r\n                    if (usuario.length > 30 || usuario.length === 0) return <div><p>{global_context.i18n.t(\"Usuário Inválido!\")}</p>{exemplo_do_comando}</div>\r\n                    localStorage.setItem('@consolestation/usuario', usuario);\r\n                    localStorage.setItem('@consolestation/senha', senha);\r\n                    return <p>\r\n                        {global_context.i18n.t(\"Usuário registrado com sucesso!\")}<br/>\r\n                        {global_context.i18n.t(\"Usuário\")}: {usuario}<br/>\r\n                        {global_context.i18n.t(\"Senha\")}: {senha}<br/>\r\n                        {global_context.i18n.t(\"Faça o Login para usa-lo como usuário atual.\")}\r\n                    </p>\r\n                }\r\n            }\r\n        }    \r\n        if (localStorage.getItem('i18nextLng') === 'en') {\r\n            const commands_en = {\r\n                test: commands.teste,\r\n                help: commands.ajuda,\r\n                clear: commands.limpar,\r\n                language: commands.language,\r\n                list: commands.lista,\r\n                play: commands.jogar,\r\n                login: commands.login,\r\n                register: commands.registrar,\r\n\r\n            }\r\n            return commands_en\r\n        }\r\n        return commands\r\n    }\r\n\r\n    \r\n}","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\nimport { Button, Row, Image, Card, Form} from 'react-bootstrap';\r\nimport { wait } from '@testing-library/react';\r\nimport AventuraGame from '../components/AventuraGame';\r\n\r\nexport default class Jogos extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_jogos() {\r\n        const global_context = this.context;\r\n        const finish_commands_config = (global_context, local_commands, local_commands_en) => {\r\n            const main_menu_commands = global_context.commands_instance.make_menu()\r\n            if (localStorage.getItem('i18nextLng') === 'en'){\r\n                local_commands_en.help = main_menu_commands.help\r\n                local_commands_en.clear = main_menu_commands.clear\r\n                global_context.setCommands(local_commands_en)\r\n            } else {\r\n                local_commands.ajuda = main_menu_commands.ajuda\r\n                local_commands.limpar = main_menu_commands.limpar\r\n                global_context.setCommands(local_commands)\r\n            }\r\n            global_context.terminal.state.stdout=[]\r\n        }\r\n        const voltar_option = {\r\n            description: global_context.i18n.t('Volta para o menu principal'),\r\n            usage: global_context.i18n.t('voltar'),\r\n            fn: function () {\r\n                global_context.setCommands(global_context.commands_instance.make_menu());\r\n                global_context.terminal.state.stdout=[]\r\n                return global_context.i18n.t('Voltando ao menu principal!')\r\n            }\r\n        }\r\n        const aventura_start_fn = function () {\r\n            const local_commands = {\r\n                voltar: voltar_option,\r\n                comecar: {\r\n                    description: global_context.i18n.t('Começar aventura'),\r\n                    usage: global_context.i18n.t('comecar'),\r\n                    fn: () => {\r\n                        global_context.terminal.state.stdout=[]\r\n                        const terminal = global_context.terminal\r\n                        setTimeout(() => {\r\n                            global_context.terminal.state.stdout=[]\r\n                            terminal.pushToStdout(global_context.aventura_game_component)\r\n                        }, 2500)\r\n                        return  <p>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/loading.gif\"} rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                                    {global_context.i18n.t('carregando')}\r\n                                </p>\r\n                    }\r\n                },\r\n            }\r\n            const local_commands_en ={\r\n                back: local_commands.voltar,\r\n                start: local_commands.comecar,\r\n            }\r\n            finish_commands_config(global_context, local_commands, local_commands_en)\r\n        }\r\n\r\n        const jogos = {\r\n            pedra_papel_tesoura: {\r\n                'descricao': global_context.i18n.t('Jogo de pedra, papel e tesoura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura'),\r\n                fn: function () {\r\n                    const local_commands = {\r\n                        voltar: voltar_option,\r\n                        usar: {\r\n                            description: global_context.i18n.t('Joga contra o computador usando pedra, papel ou tesoura'),\r\n                            usage: global_context.i18n.t('usar <pedra ou papel ou tesoura>'),\r\n                            fn: function (jogada) {\r\n                                const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}: <i>usar</i> {global_context.i18n.t(\"pedra\")}</p>\r\n                                const opcoes = [global_context.i18n.t('pedra'), global_context.i18n.t('papel'), global_context.i18n.t('tesoura')];\r\n                                const resultado = []\r\n                                if (opcoes.includes(jogada)) {\r\n                                    const jogada_ai = opcoes[global_context.getRndInteger(0,2)]\r\n                                    var venceu_ou_empate = false\r\n                                    resultado.push(global_context.i18n.t(\"sua_jogada\")+jogada)\r\n                                    resultado.push(global_context.i18n.t(\"ai_jogada\")+jogada_ai)                                \r\n                                    if (jogada_ai === jogada) {\r\n                                        resultado.push(global_context.i18n.t(\"Um empate!\"))\r\n                                        venceu_ou_empate=true\r\n                                    }\r\n                                    else {\r\n                                        switch (jogada) {\r\n                                            case global_context.i18n.t('pedra'):\r\n                                                if (jogada_ai===global_context.i18n.t('tesoura')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n        \r\n                                            case global_context.i18n.t('papel'):\r\n                                                if (jogada_ai===global_context.i18n.t('pedra')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n        \r\n                                            case global_context.i18n.t('tesoura'):\r\n                                                if (jogada_ai===global_context.i18n.t('papel')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n                                        \r\n                                            default:\r\n                                                break;\r\n                                        }\r\n                                    }\r\n                                    if (!venceu_ou_empate) resultado.push(global_context.i18n.t(\"Você perdeu!\"))\r\n                                    return <div>{global_context.formatScoreResult(resultado)}</div>\r\n                                }\r\n                                return <div><p>{global_context.i18n.t(\"Opção de jogada inválida!\")}</p>{exemplo_do_comando}</div>\r\n                            }\r\n                        },\r\n                    }\r\n                    const local_commands_en ={\r\n                        back: local_commands.voltar,\r\n                        use: local_commands.usar,\r\n                    }\r\n                    finish_commands_config(global_context, local_commands, local_commands_en)                   \r\n                }\r\n            },\r\n            jogue_a_moeda: {\r\n                'descricao': global_context.i18n.t('Cara ou coroa?'),\r\n                'instrucoes': global_context.i18n.t('Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa'),\r\n                fn: function () {\r\n                    const local_commands = {\r\n                        voltar: voltar_option,\r\n                        jogar: {\r\n                            description: global_context.i18n.t('Joga uma moeda'),\r\n                            usage: global_context.i18n.t('jogar'),\r\n                            fn: function () {\r\n                                switch (global_context.getRndInteger(0,1)) {\r\n                                    case 0:\r\n                                        return global_context.formatScoreResult([\r\n                                            global_context.i18n.t('A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado'), \r\n                                            '-',\r\n                                            global_context.i18n.t('resultado_cara')]);\r\n                                    case 1:\r\n                                        const rare_message = global_context.getRndInteger(0,99);\r\n                                        var hidden = '';\r\n                                        if (rare_message > 90) {\r\n                                            hidden = global_context.i18n.t('passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ')\r\n                                        }\r\n                                        return global_context.formatScoreResult([\r\n                                            global_context.i18n.t('A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,')+\r\n                                            hidden+\r\n                                            global_context.i18n.t(' e quando chega vê o resultado'), \r\n                                            '-', \r\n                                            global_context.i18n.t('resultado_coroa')]);\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                    const local_commands_en ={\r\n                        back: local_commands.voltar,\r\n                        flip: local_commands.jogar,\r\n                    }\r\n                    finish_commands_config(global_context, local_commands, local_commands_en)\r\n                }\r\n            },\r\n            a_aventura: {\r\n                'descricao': global_context.i18n.t('Comece sua aventura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando ajuda a qualquer momento para verificar as opções.'),\r\n                fn: aventura_start_fn\r\n            },\r\n        }\r\n        if (localStorage.getItem('i18nextLng') === 'en') {\r\n            const jogos_en = {\r\n                rock_paper_scissors: jogos.pedra_papel_tesoura,\r\n                flip_a_coin: jogos.jogue_a_moeda,\r\n                the_adventure: jogos.a_aventura,\r\n            }\r\n            return jogos_en\r\n        }\r\n        return jogos\r\n    }\r\n\r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport './main.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConsolePage from './pages/console';\r\nimport { GlobalContextProvider } from './helpers/GlobalContext';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nimport Commands from './classes/commands';\r\nimport Jogos from './classes/jogos';\r\n\r\ntoast.configure()\r\n\r\nexport default props => {\r\n    const [actual_page, setPage] = useState(<ConsolePage />);\r\n    const [global_context, setGlobalContext] = useState({});\r\n    const [terminal, setTerminal] = useState();\r\n    const [global_state, setGlobalState] = useState({});\r\n\r\n    global_context.setPage = setPage;\r\n    global_context.user = 'user';\r\n    global_context.i18n = i18n;\r\n    global_context.terminal = terminal;\r\n    global_context.setTerminal = setTerminal;\r\n    global_context.commands_instance = new Commands({'context': global_context})\r\n    global_context.jogos_instance = new Jogos({'context': global_context})\r\n    global_context.global_state = global_state\r\n    global_context.setGlobalState = setGlobalState\r\n\r\n    return <div className='wrapper'>            \r\n                <GlobalContextProvider value={{global_context, setGlobalContext}}>\r\n                    <I18nextProvider i18n={i18n}>\r\n                        {actual_page}\r\n                    </I18nextProvider>\r\n                </GlobalContextProvider>\r\n        </div>\r\n        \r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './main/app'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}