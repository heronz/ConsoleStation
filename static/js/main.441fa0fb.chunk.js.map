{"version":3,"sources":["main/helpers/GlobalContext.jsx","main/classes/utils.jsx","main/components/GameWindow.jsx","main/components/AventuraGame.jsx","main/components/RockPaperScissors.jsx","main/components/FlipACoin.jsx","main/pages/console.jsx","i18n.js","main/classes/commands.jsx","main/classes/jogos.jsx","main/app.jsx","index.jsx"],"names":["GlobalContext","React","createContext","GlobalContextProvider","Provider","getRndInteger","min","max","Math","floor","random","props","Card","style","width","color","backgroundColor","Header","variant","Form","Control","ref","textLog","as","rows","autocorrect","spellcheck","resize","border","value","text_log","join","onChange","current","scrollTop","scrollHeight","console","log","Body","Title","fontWeight","game_title","className","button_group","Button","onClick","global_context","terminal","terminalInput","disabled","i18n","t","visibility","score_component","useContext","game_btns","setGlobalContext","update_textLog","add_button_to_button_group","remove_button_from_button_group","event_states","event_countdown2","event_countdown","updated","olhar_events","length","push","updated_timed_events","audio","Audio","process","play","setTimeout","pause","button_group_copy","text_log_copy","repeat","useState","setTextLog","setButtonGroup","createRef","new_line","separator","local_text_log","Array","from","new_button","clear","local_button_group","includes","old_button","splice","indexOf","useEffect","GameWindow","update_score","player_win","just_update","localStorage","getItem","setItem","parseInt","toString","make_score_component","faz_jogada","jogada","jogada_ai","rock_play","scissors_play","paper_play","setScoreComponent","player_score","ai_score","score_component_local","opcoes","ai_result","formatScoreResult","lines","size","result_size","filler_char","filler_line","header","footer","transform","formated_lines","forEach","line","fillers","teve_splice","sliced_lines","slice","i","pop","lineHeight","formatListResult","title","itens","list","List","component","aria-label","ListItem","ListItemText","primary","map","item","inset","user","usuario_logado","setUsuarioLogado","jogos_instance","make_jogos","jogos","setJogos","commands_instance","make_menu","commands","setCommands","terminal_ref","setTerminal","aventura_game_component","AventuraGame","rock_paper_scissors_component","RockPaperScissors","flip_a_coin_component","FlipACoin","Row","marginLeft","welcomeMessage","Image","src","rounded","marginBottom","promptLabel","commandCallback","result","next_callback","dangerMode","noDefaults","promptLabelStyle","height","margin","minWidth","minHeight","position","borderRadius","top","bottom","left","right","borderBottom","borderRight","contentStyle","use","LanguageDetector","init","resources","translations","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","Commands","context","state","this","teste","description","usage","fn","stdout","pushToStdout","ajuda","showHelp","limpar","language","newlang","changeLanguage","window","location","reload","lista","lista_jogos","Object","keys","nome_jogo","descricao","jogar","nome_do_jogo","exemplo_do_comando","Number","isNaN","instrucoes","login","usuario","senha","registrar","test","help","register","Component","contextType","Jogos","voltar_option","default_fn","game_component","local_commands","voltar","comecar","local_commands_en","main_menu_commands","finish_commands_config","back","start","pedra_papel_tesoura","jogue_a_moeda","a_aventura","rock_paper_scissors","flip_a_coin","the_adventure","toast","configure","actual_page","setPage","global_state","setGlobalState","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.441fa0fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nconst GlobalContextProvider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport { GlobalContextProvider as GlobalContextProvider };","export function getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import React from 'react'\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\r\n    return <Card style={{ width: '80vw', color: \"white\", backgroundColor: \"#092777cf\" }}>\r\n                <Card.Header variant=\"top\">\r\n                    <Form.Control \r\n                        ref={props.textLog}\r\n                        as=\"textarea\" \r\n                        rows=\"10\"  \r\n                        autocorrect=\"off\"\r\n                        spellcheck=\"false\"\r\n                        style={{ resize: 'none', backgroundColor: \"#161616\", color: \"#0D0\", border: \"inset #0b2d88cf 15px\" }} \r\n                        value={props.text_log.join('\\n')}\r\n                        onChange={() => {\r\n                            this.textLog.current.scrollTop = this.textLog.current.scrollHeight;\r\n                            console.log('this: ', this);\r\n                        }}/>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title style={{fontWeight: \"bold\"}}>{props.game_title}</Card.Title>\r\n                    <div className='aventura-game-button-div'>\r\n                        {props.button_group}\r\n                    </div>\r\n                    <div className='aventura-game-button-div'>\r\n                        <Button \r\n                            variant=\"light\" \r\n                            onClick={() => {\r\n                                props.global_context.terminal.terminalInput.current.disabled = !props.global_context.terminal.terminalInput.current.disabled\r\n                                // console.log('global_context.terminal: ', global_context.terminal);\r\n                                }}>{props.global_context.i18n.t('Ligar/Desligar input do terminal')}</Button>\r\n                    </div>\r\n                    <div className='aventura-game-button-div' style={{visibility: props.score_component?'':'hidden'}}>{props.score_component}</div>\r\n                    {/* <div className='aventura-game-button-div'>\r\n                        <Container fluid style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"55vw\" }}>\r\n                            <Row xs={{span: 6}} style={{ paddingLeft: 0, paddingRight: 0, alignItems: \"center\", border: \"medium ridge #404040\" }}>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0}}>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/game_icons/1 gold.png\"} rounded style={{width: \"40px\", height: \"40px\", margin: 0}}/>\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                    999\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0, border: \"ridge #404040\", borderWidth: \"0 0 0 medium\" }}>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/game_icons/2 simple sword.png\"} rounded style={{width: \"40px\", height: \"40px\", margin: 0}}/>\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                    999\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0, border: \"ridge #404040\", borderWidth: \"0 0 0 medium\" }}>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/game_icons/gem.png\"} rounded style={{width: \"40px\", height: \"40px\", margin: 0}}/>\r\n                                </Col>\r\n                                <Col style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n                                    999\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div> */}\r\n                </Card.Body>\r\n            </Card>\r\n}","import React, {useState, useContext, useEffect} from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { getRndInteger } from '../classes/utils';\r\nimport GameWindow from './GameWindow';\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const game_btns = [\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t('aventura_continue_1'));\r\n                add_button_to_button_group(game_btns[1], true)\r\n                }}>{global_context.i18n.t('Levantar')}</Button>,\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                remove_button_from_button_group(game_btns[2]);\r\n                update_textLog(global_context.i18n.t('aventura_continue_2'));\r\n                if (event_states.event_countdown2 === 0) {\r\n                    if(event_states.event_countdown ===0) {\r\n                        add_button_to_button_group(game_btns[2])\r\n                        update_textLog(global_context.i18n.t('you_see_something'));\r\n                    }\r\n                    else {\r\n                        if (event_states.event_countdown > 0) event_states.event_countdown--\r\n                        else event_states.event_countdown = 2\r\n                    }\r\n                    event_states.event_countdown2 = getRndInteger(3,6);\r\n                }\r\n                else {\r\n                    event_states.event_countdown2--\r\n                }\r\n                }}>{global_context.i18n.t('Continuar')}</Button>,\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                var updated = false;\r\n                if (event_states.olhar_events.length === 0 || (event_states.olhar_events[2])) {\r\n                    update_textLog(global_context.i18n.t('aventura_olhar_1'));\r\n                    event_states.olhar_events.push(true)\r\n                    updated = true\r\n                }\r\n                if (event_states.olhar_events[0] && !updated){\r\n                    event_states.olhar_events[0] = false\r\n                    event_states.olhar_events.push(true)\r\n                    if (!updated_timed_events[0]) {\r\n                        const audio = new Audio(process.env.PUBLIC_URL + \"/sounds/spooky2.wav\")\r\n                        audio.play()\r\n                        setTimeout(() => {audio.pause()}, 6000)\r\n                        updated_timed_events[0] = true\r\n                    }\r\n                    setTimeout(() => update_textLog(global_context.i18n.t('aventura_olhar_2')), 500)\r\n                    update_textLog(global_context.i18n.t('Você olha...'))\r\n                    updated = true\r\n                }\r\n                if (event_states.olhar_events[1] && !updated){\r\n                    event_states.olhar_events[1] = false\r\n                    event_states.olhar_events.push(true)\r\n                    if (!updated_timed_events[1]) {\r\n                        const audio = new Audio(process.env.PUBLIC_URL + \"/sounds/spooky.wav\")\r\n                        audio.play()\r\n                        setTimeout(() => {audio.pause()}, 6000)\r\n                        updated_timed_events[1] = true\r\n                    }\r\n                    setTimeout(() => update_textLog(global_context.i18n.t('aventura_olhar_3')), 500)\r\n                    update_textLog(global_context.i18n.t('Você olha...'))\r\n                    updated = true\r\n                }\r\n                remove_button_from_button_group(game_btns[2])\r\n            }}>{global_context.i18n.t('olhar')}</Button>,\r\n    ]\r\n    var button_group_copy = [game_btns[0]]\r\n    var text_log_copy = [global_context.i18n.t('aventura_start'), \"-\".repeat(15)]\r\n    var updated_timed_events = [false, false]\r\n    var event_states = {\r\n        olhar_events: [],\r\n        event_countdown: 0,\r\n        event_countdown2: 0,\r\n    }\r\n    const [text_log, setTextLog] = useState([global_context.i18n.t('aventura_start'), \"-\".repeat(15)])\r\n    const [button_group, setButtonGroup] = useState([game_btns[0]])\r\n    const textLog = React.createRef();\r\n\r\n    const update_textLog = (new_line) => {\r\n        const separator = \"-\".repeat(15)\r\n        const local_text_log = Array.from(text_log_copy)\r\n        local_text_log.push(new_line)\r\n        local_text_log.push(separator)\r\n        setTextLog(local_text_log)\r\n        text_log_copy=local_text_log\r\n    }\r\n\r\n    const add_button_to_button_group = (new_button, clear=false) => {\r\n        var local_button_group = [];\r\n        if (!clear) {\r\n            local_button_group = Array.from(button_group_copy)\r\n        }\r\n        if (!local_button_group.includes(new_button)) local_button_group.push(new_button);\r\n        setButtonGroup(local_button_group)\r\n        button_group_copy = local_button_group\r\n    }\r\n\r\n    const remove_button_from_button_group = (old_button) => {\r\n        const local_button_group = Array.from(button_group_copy)\r\n\r\n        if (local_button_group.includes(old_button)){\r\n            local_button_group.splice(local_button_group.indexOf(old_button, 1));\r\n            setButtonGroup(local_button_group)\r\n            button_group_copy = local_button_group\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        textLog.current.scrollTop = textLog.current.scrollHeight;\r\n    })\r\n\r\n    return <GameWindow \r\n                textLog={textLog}\r\n                text_log={text_log}\r\n                global_context={global_context}\r\n                button_group={button_group}\r\n                game_title={global_context.i18n.t('a estrada a frente')}\r\n    />\r\n}","import React, {useState, useContext, useEffect} from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { getRndInteger } from '../classes/utils';\r\nimport GameWindow from './GameWindow';\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n\r\n    const update_score = (player_win, just_update) => {\r\n        if (!localStorage.getItem('@consolestation/rps_score_player')) localStorage.setItem('@consolestation/rps_score_player', '0')\r\n        if (!localStorage.getItem('@consolestation/rps_score_ai')) localStorage.setItem('@consolestation/rps_score_ai', '0')\r\n        if (!just_update){\r\n            if (player_win) {\r\n                localStorage.setItem('@consolestation/rps_score_player', (parseInt(localStorage.getItem('@consolestation/rps_score_player'))+1).toString())\r\n            } else {\r\n                localStorage.setItem('@consolestation/rps_score_ai', (parseInt(localStorage.getItem('@consolestation/rps_score_ai'))+1).toString())\r\n            }\r\n        }\r\n        make_score_component(localStorage.getItem('@consolestation/rps_score_player'), localStorage.getItem('@consolestation/rps_score_ai'))\r\n    }\r\n\r\n    const faz_jogada = jogada => {\r\n        const opcoes = [global_context.i18n.t('pedra'), global_context.i18n.t('papel'), global_context.i18n.t('tesoura')];\r\n        const jogada_ai = opcoes[global_context.getRndInteger(0,2)]\r\n        var venceu_ou_empate = false\r\n        update_textLog(global_context.i18n.t(\"ai_jogada\")+jogada_ai)\r\n        if (jogada_ai === jogada) {\r\n            update_textLog(global_context.i18n.t(\"Um empate!\"))\r\n            return\r\n        }\r\n        switch (jogada) {\r\n            case global_context.i18n.t('pedra'):\r\n                if (jogada_ai===global_context.i18n.t('tesoura')) {\r\n                    update_textLog(global_context.i18n.t(\"Você ganhou!\"))\r\n                    update_score(true)\r\n                    return\r\n                }\r\n                break;\r\n\r\n            case global_context.i18n.t('papel'):\r\n                if (jogada_ai===global_context.i18n.t('pedra')) {\r\n                    update_textLog(global_context.i18n.t(\"Você ganhou!\"))\r\n                    update_score(true)\r\n                    return\r\n                }\r\n                break;\r\n\r\n            case global_context.i18n.t('tesoura'):\r\n                if (jogada_ai===global_context.i18n.t('papel')) {\r\n                    update_textLog(global_context.i18n.t(\"Você ganhou!\"))\r\n                    update_score(true)\r\n                    return\r\n                }\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        update_textLog(global_context.i18n.t(\"Você perdeu!\"))\r\n        update_score(false)\r\n    }\r\n    const rock_play = global_context.i18n.t('pedra')\r\n    const scissors_play = global_context.i18n.t('tesoura')\r\n    const paper_play = global_context.i18n.t('papel')\r\n\r\n    const game_btns = [\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t(\"sua_jogada\")+scissors_play);\r\n                faz_jogada(scissors_play)\r\n                }}>{scissors_play}</Button>,\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t(\"sua_jogada\")+paper_play);\r\n                faz_jogada(paper_play)\r\n                }}>{paper_play}</Button>,\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t(\"sua_jogada\")+rock_play);\r\n                faz_jogada(rock_play)\r\n                }}>{rock_play}</Button>,\r\n    ]\r\n\r\n    var text_log_copy = []\r\n    const [text_log, setTextLog] = useState([])\r\n    const [button_group, setButtonGroup] = useState(game_btns)\r\n    const [score_component, setScoreComponent] = useState(<p>{global_context.i18n.t('player_score')}{localStorage.getItem('@consolestation/rps_score_player')?localStorage.getItem('@consolestation/rps_score_player'):0}<br/>\r\n                                                            {global_context.i18n.t('ai_score')}{localStorage.getItem('@consolestation/rps_score_ai')?localStorage.getItem('@consolestation/rps_score_ai'):0}</p>)\r\n    const textLog = React.createRef();\r\n\r\n    const update_textLog = (new_line) => {\r\n        const separator = \"-\".repeat(15)\r\n        const local_text_log = Array.from(text_log_copy)\r\n        local_text_log.push(new_line)\r\n        local_text_log.push(separator)\r\n        setTextLog(local_text_log)\r\n        text_log_copy=local_text_log\r\n    }\r\n\r\n    useEffect(() => {\r\n        textLog.current.scrollTop = textLog.current.scrollHeight;\r\n    })\r\n\r\n    const make_score_component = (player_score, ai_score) => {\r\n        const score_component_local = <p>{global_context.i18n.t('player_score')}{player_score}<br/>\r\n                {global_context.i18n.t('ai_score')}{ai_score}</p>\r\n        setScoreComponent(score_component_local)\r\n    }\r\n\r\n    return <GameWindow \r\n                textLog={textLog}\r\n                text_log={text_log}\r\n                global_context={global_context}\r\n                button_group={button_group}\r\n                game_title={global_context.i18n.t('Rock Paper Scissors')}\r\n                score_component={score_component}\r\n    />\r\n}","import React, {useState, useContext, useEffect} from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { getRndInteger } from '../classes/utils';\r\nimport GameWindow from './GameWindow';\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n\r\n    const update_score = (player_win, just_update) => {\r\n        if (!localStorage.getItem('@consolestation/fac_score_player')) localStorage.setItem('@consolestation/fac_score_player', '0')\r\n        if (!just_update){\r\n            if (player_win) {\r\n                localStorage.setItem('@consolestation/fac_score_player', (parseInt(localStorage.getItem('@consolestation/fac_score_player'))+1).toString())\r\n            }\r\n        }\r\n        make_score_component(localStorage.getItem('@consolestation/fac_score_player'))\r\n    }\r\n\r\n    const faz_jogada = jogada => {\r\n        const opcoes = [global_context.i18n.t('resultado_cara'), global_context.i18n.t('resultado_coroa')];\r\n        const ai_result = global_context.getRndInteger(0,1)\r\n        const resultado = opcoes[ai_result]\r\n        update_textLog(resultado)\r\n        switch (jogada) {\r\n            case 'cara':\r\n                if (ai_result===0) {\r\n                    update_textLog(global_context.i18n.t(\"Você ganhou!\"))\r\n                    update_score(true)\r\n                    return\r\n                } else {\r\n                    update_textLog(global_context.i18n.t(\"Você perdeu!\"))\r\n                }\r\n                break;\r\n\r\n            case 'coroa':\r\n                if (ai_result===1) {\r\n                    update_textLog(global_context.i18n.t(\"Você ganhou!\"))\r\n                    update_score(true)\r\n                    return\r\n                } else {\r\n                    update_textLog(global_context.i18n.t(\"Você perdeu!\"))\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const game_btns = [\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t(\"sua_aposta\")+global_context.i18n.t('Cara'));\r\n                faz_jogada('cara')\r\n                }}>{global_context.i18n.t('Apostar Cara')}</Button>,\r\n        <Button \r\n            variant=\"light\" \r\n            onClick={() => {\r\n                update_textLog(global_context.i18n.t(\"sua_aposta\")+global_context.i18n.t('Coroa'));\r\n                faz_jogada('coroa')\r\n                }}>{global_context.i18n.t('Apostar Coroa')}</Button>,\r\n    ]\r\n    \r\n    var text_log_copy = []\r\n    const [text_log, setTextLog] = useState([])\r\n    const [button_group, setButtonGroup] = useState(game_btns)\r\n    const [score_component, setScoreComponent] = useState(<p>{global_context.i18n.t('player_score')}{localStorage.getItem('@consolestation/fac_score_player')?localStorage.getItem('@consolestation/fac_score_player'):0}</p>)\r\n    const textLog = React.createRef();\r\n\r\n    const update_textLog = (new_line) => {\r\n        const separator = \"-\".repeat(15)\r\n        const local_text_log = Array.from(text_log_copy)\r\n        local_text_log.push(new_line)\r\n        local_text_log.push(separator)\r\n        setTextLog(local_text_log)\r\n        text_log_copy=local_text_log\r\n    }\r\n\r\n    useEffect(() => {\r\n        textLog.current.scrollTop = textLog.current.scrollHeight;\r\n    })\r\n\r\n    const make_score_component = (player_score, ai_score) => {\r\n        const score_component_local = <p>{global_context.i18n.t('player_score')}{player_score}</p>\r\n        setScoreComponent(score_component_local)\r\n    }\r\n\r\n    return <GameWindow \r\n                textLog={textLog}\r\n                text_log={text_log}\r\n                global_context={global_context}\r\n                button_group={button_group}\r\n                game_title={global_context.i18n.t('Flip a Coin')}\r\n                score_component={score_component}\r\n    />\r\n}","import React, {useState, useContext, useEffect} from 'react';\r\nimport Terminal from 'react-console-emulator'\r\nimport { Button, Row, Image, Card, Form} from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport GlobalContext from '../helpers/GlobalContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AventuraGame from '../components/AventuraGame';\r\nimport { getRndInteger } from '../classes/utils';\r\nimport RockPaperScissors from '../components/RockPaperScissors';\r\nimport FlipACoin from '../components/FlipACoin';\r\n\r\nfunction formatScoreResult(lines = [], size=35) {\r\n    const result_size = size\r\n    const filler_char = '+'\r\n    const filler_line = <div>|{filler_char.repeat(result_size-2)}|<br/></div>\r\n    var header =<div>{'_'.repeat(result_size)}<br/>{filler_line}</div>\r\n    var footer =<div>{filler_line}<div style={{transform: \"rotate(180deg)\", width: \"max-content\"}}>{'_'.repeat(result_size)}</div></div>\r\n    var formated_lines = []\r\n    lines.forEach((line) => {\r\n        var fillers = result_size-4-line.length\r\n        var teve_splice = false\r\n        if (line.length < result_size) {\r\n            formated_lines.push(<div>|{filler_char.repeat(Math.floor(fillers/2))} {line} {filler_char.repeat(Math.floor(fillers/2)+(fillers%2===1?1:0))}|<br/></div>)\r\n        } else {\r\n            teve_splice = true\r\n            const sliced_lines = Math.floor(line.length/ (result_size-4))+1\r\n            var slice = ''\r\n            var i=0\r\n            while(i<sliced_lines){\r\n                slice = line.slice(((result_size-2)*i), ((result_size-2)*(i+1)))\r\n                fillers = result_size-2-slice.length\r\n                formated_lines.push(<div>|{slice}{filler_char.repeat(Math.floor(fillers))}|<br/></div>)\r\n                i++\r\n            }\r\n            formated_lines.push(filler_line)\r\n        }\r\n        if (teve_splice) formated_lines.pop()\r\n    })\r\n    return <p style={{lineHeight:'13px'}}>{header} {formated_lines} {footer}</p>\r\n}\r\n\r\nfunction formatListResult(title='', itens = []) {\r\n    var i=0;\r\n    const list = <List component=\"nav\" className=\"list-format\" aria-label=\"contacts\">\r\n                    <ListItem className=\"title\">\r\n                        <ListItemText primary={title} />\r\n                    </ListItem>\r\n                    {itens.map(item => {\r\n                        i++;\r\n                        return <ListItem >\r\n                            {i}\r\n                            <ListItemText inset primary={item} />\r\n                        </ListItem>\r\n                    })}\r\n                </List>\r\n    return list\r\n}\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const [usuario_logado, setUsuarioLogado] = useState(global_context.user);\r\n    const [jogos, setJogos] = useState(global_context.jogos_instance.make_jogos());\r\n    const [commands, setCommands] = useState(global_context.commands_instance.make_menu());\r\n    const terminal_ref = React.createRef()\r\n    useEffect(() => {\r\n        global_context.setTerminal(terminal_ref.current);\r\n        global_context.jogos= jogos\r\n        global_context.formatScoreResult = formatScoreResult\r\n        global_context.formatListResult = formatListResult\r\n        global_context.setUsuarioLogado = setUsuarioLogado\r\n        global_context.setCommands = setCommands\r\n        global_context.setJogos = setJogos\r\n        global_context.getRndInteger = getRndInteger\r\n        global_context.aventura_game_component = <AventuraGame />\r\n        global_context.rock_paper_scissors_component = <RockPaperScissors />\r\n        global_context.flip_a_coin_component = <FlipACoin />\r\n    })\r\n    \r\n    const callback_terminal = (result) => {\r\n        if (global_context.next_callback) global_context.next_callback()\r\n    };\r\n\r\n    return (\r\n          <div className=\"content-console\">\r\n              <div className=\"win-bar\">\r\n                  <Row>\r\n                    <h3 style={{marginLeft: \"2vh\"}}>ConsoleStation</h3>\r\n                    <div className=\"win-control-buttons\">\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><MinimizeIcon /></Button>\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><CloseIcon /></Button>\r\n                    </div>\r\n                  </Row>\r\n                  <Row>\r\n                    <Terminal\r\n                    ref={terminal_ref}\r\n                    commands={commands}\r\n                    welcomeMessage={<div>\r\n                            <p>\r\n                            <Image src={process.env.PUBLIC_URL + \"/cs-logo.png\"} rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                            <h3>{global_context.i18n.t(\"Seja bem vindo ao ConsoleStation\")}</h3><br/>\r\n                            {global_context.i18n.t(\"Para ver uma lista de comandos digite \")}<i>{global_context.i18n.t(\"ajuda\")}</i><br/>\r\n                            {global_context.i18n.t(\"Para limpar o terminal digite \")}<i>{global_context.i18n.t(\"limpar\")}</i>                            \r\n                            </p>\r\n                        </div>}\r\n                    promptLabel={usuario_logado + '@Consolestation:~$'}\r\n                    commandCallback={callback_terminal}\r\n                    dangerMode\r\n                    noDefaults\r\n                    promptLabelStyle={{\r\n                        color: \"#6890ff\"\r\n                    }}\r\n                    style={{\r\n                        width:\"98%\", \r\n                        height:\"92%\", \r\n                        margin:\"50px auto\",\r\n                        minWidth: \"98%\", \r\n                        minHeight: \"2%\",\r\n                        position: \"absolute\",\r\n                        borderRadius: \"0 0 5px 5px\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        borderBottom: 'solid',\r\n                        borderRight: 'solid'\r\n                        }}\r\n                    contentStyle={{\r\n                        height: \"95%\"\r\n                    }}\r\n                    />\r\n                  </Row>\r\n              </div>\r\n          </div>\r\n      )\r\n    }","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  // we init with resources\r\n  resources: {\r\n    'en': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Welcome to ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"To see a list of commands use \",\r\n        \"Para limpar o terminal digite \": \"To clear the terminal use \",\r\n        'Trocar linguagem do sistema': 'Change system language',\r\n        \"Comando inválido!\": \"Command Invalid\",\r\n        \"Exemplo do comando\": \"Command example: \",\r\n        'Lista de jogos instalados': 'List of installed games',\r\n        'Jogar um dos jogos disponíveis na memória': 'Play one of the installed games',\r\n        'jogar <nome_do_jogo>': 'play <game_name>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Invalid game, see the list of installed games.',\r\n        'Efetuar Login.': 'Make login.',\r\n        'login <usuario> <senha>': 'login <user> <password>',\r\n        \"Nome_de_Usuario\": \"Username\",\r\n        'Usuário logado!': 'Login success!',\r\n        \"Credenciais Inválidas!\": \"Invalid login information!\",\r\n        'Efetuar cadastro de usuário.': 'Register new user.',\r\n        'registrar_example': 'register <user: 30 characters max> <password: Exactly 4 characters>',\r\n        \"Senha e Usuário requerido!\": \"User and password required\",\r\n        \"Senha Inválida!\": \"Invalid password\",\r\n        \"Usuário Inválido!\": \"Invalid user\",\r\n        \"Usuário registrado com sucesso!\": \"User registration successfull!\",\r\n        \"Usuário\": \"user\",\r\n        \"Senha\": \"password\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Make login to use it\",\r\n        'Jogo de pedra, papel e tesoura': 'Rock, paper and scissors',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use command start to start the game',\r\n        'Volta para o menu principal': 'Go to main menu',\r\n        'Voltando ao menu principal!': 'Going to main menu',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Play against the computer using rock, paper or scissors',\r\n        'usar <pedra ou papel ou tesoura>': 'use <rock or paper or scissors>',\r\n        'pedra': 'Rock',\r\n        'papel': 'Paper',\r\n        'tesoura': 'Scissors',\r\n        \"sua_jogada\": \"Your move: \",\r\n        \"ai_jogada\": \"My move(AI): \",\r\n        \"Um empate!\": \"A draw\",\r\n        \"Você ganhou!\": \"You win\",\r\n        \"Você perdeu!\": \"You lose\",\r\n        \"Opção de jogada inválida!\": \"Invalid choice\",\r\n        'Cara ou coroa?': 'Heads or Tails?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': \"Use flip to flip a coin and see if it's heads or tails\",\r\n        'Joga uma moeda': 'Flip a coin into the air',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'The coin flips in the air for some time and then hits the ground, you stand and go see what landed',\r\n        'resultado_cara': 'Result: Heads',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': \"go trough a unknown figure that wasn't there 5 minutes before, \",\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'The coin flips in the air for some time, bouncing on the ground before landing a little too far, you run after it, ',\r\n        ' e quando chega vê o resultado': ' and when you catch it you see what landed',\r\n        'resultado_coroa': 'Result: Tails',\r\n        'teste': 'test',\r\n        'lista': 'list',\r\n        \"registrar\": \"register\",\r\n        'voltar': 'back',\r\n        'jogar': 'flip',\r\n        'Comece sua aventura': 'Start the adventure',\r\n        'Use o comando ajuda a qualquer momento para verificar as opções.': 'Use the help command at any moment to see the options.',\r\n        'Limpar tela':'Clear screen',\r\n        'limpar':'clear',\r\n        'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso': 'Lists all commands avaliable with a brief description and use example',\r\n        'ajuda': 'help',\r\n        'comecar':'start',\r\n        'aventura_start': 'You look to the empty road in front of you and think: \"What am I doing here?\"',\r\n        \"aventura_continue_1\": 'You stand up and start to walk on the road',\r\n        \"aventura_continue_2\": \"You continue to walk on the road\",\r\n        'Olhar a sua volta': 'Look around you',\r\n        'olhar': 'Look',\r\n        \"aventura_olhar_1\": \"At your right on the horizon there's a dense forest, at your left you see a mountain with snow at the top, ahead you see a empty road.\",\r\n        \"aventura_olhar_2\": \"You see the trees moving on the forest by your right, seems like something big is there.\",\r\n        \"aventura_olhar_3\": \"Wait, is there someone waving on the top of that mountain? *rubs eyes* Was only my imagination?\",\r\n        \"you_see_something\": \"What was that?\",\r\n        'Levantar': 'Stand up',\r\n        'Continuar': 'Continue',\r\n        'carregando': 'Loading...',\r\n        'Ligar/Desligar input do terminal': 'Toggle input terminal',\r\n        'Você olha...': 'You look...',\r\n        'a estrada a frente': 'The road ahead',\r\n        'Começar jogo': 'Start game',\r\n        'Rock Paper Scissors': 'Rock Paper Scissors',\r\n        'player_score': 'Your score: ',\r\n        'ai_score': 'AI Score: ',\r\n        \"sua_aposta\": \"Your bet: \",\r\n        'Apostar Cara': 'Bet Heads',\r\n        'Apostar Coroa': 'Bet Tails',\r\n        'Flip a Coin': 'Heads or Tails',\r\n        'Cara': 'Heads',\r\n        'Coroa': 'Tails',\r\n\r\n      }\r\n    },\r\n    'pt-BR': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Seja bem vindo ao ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"Para ver a lista de comandos use \",\r\n        \"Para limpar o terminal digite \": \"Para limpar o terminal use \",\r\n        'Trocar linguagem do sistema': 'Trocar linguagem do sistema',\r\n        \"Comando inválido!\":\"Comando inválido\",\r\n        \"Exemplo do comando\":\"Exemplo do comando: \",\r\n        'Lista de jogos instalados': 'Lista de jogos instalados',\r\n        'Jogar um dos jogos disponíveis na memória': 'Jogar um dos jogos disponíveis na memória',\r\n        'jogar <nome_do_jogo>': 'jogar <nome_do_jogo>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Jogo inválido, veja a lista de jogos disponíveis.',\r\n        'Efetuar Login.': 'Efetuar Login.',\r\n        'login <usuario> <senha>': 'login <usuario> <senha>',\r\n        \"Nome_de_Usuario\": \"Nome_de_Usuario\",\r\n        'Usuário logado!': 'Usuário logado!',\r\n        \"Credenciais Inválidas!\": \"Credenciais Inválidas!\",\r\n        'Efetuar cadastro de usuário.': 'Efetuar cadastro de usuário.',\r\n        'registrar_example': 'registrar <usuario: Máximo de 30 caracteres> <senha: Apenas 4 caracteres>',\r\n        \"Senha e Usuário requerido!\": \"Senha e Usuário requerido!\",\r\n        \"Senha Inválida!\": \"Senha Inválida!\",\r\n        \"Usuário Inválido!\": \"Usuário Inválido!\",\r\n        \"Usuário registrado com sucesso!\": \"Usuário registrado com sucesso!\",\r\n        \"Usuário\": \"Usuário\",\r\n        \"Senha\": \"Senha\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Faça o Login para usa-lo como usuário atual.\",\r\n        'Jogo de pedra, papel e tesoura': 'Jogo de pedra, papel e tesoura',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use o comando comecar para iniciar o jogo',\r\n        'Volta para o menu principal': 'Volta para o menu principal',\r\n        'Voltando ao menu principal!': 'Voltando ao menu principal!',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Joga contra o computador usando pedra, papel ou tesoura',\r\n        'usar <pedra ou papel ou tesoura>': 'usar <pedra ou papel ou tesoura>',\r\n        'pedra': 'Pedra',\r\n        'papel': 'Papel',\r\n        'tesoura': 'Tesoura',\r\n        \"sua_jogada\": \"Sua Jogada: \",\r\n        \"ai_jogada\": \"Minha jogada(AI): \",\r\n        \"Um empate!\": \"Um empate!\",\r\n        \"Você ganhou!\": \"Você ganhou!\",\r\n        \"Você perdeu!\": \"Você perdeu!\",\r\n        \"Opção de jogada inválida!\": \"Opção de jogada inválida!\",\r\n        'Cara ou coroa?': 'Cara ou coroa?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': 'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa',\r\n        'Joga uma moeda': 'Joga uma moeda',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado',\r\n        'resultado_cara': 'Resultado: Cara',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': 'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ',\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,',\r\n        ' e quando chega vê o resultado': ' e quando chega vê o resultado',\r\n        'resultado_coroa': 'Resultado: Coroa',\r\n        'teste': 'teste',\r\n        'lista': 'lista',\r\n        \"registrar\": \"registrar\",\r\n        'voltar': 'voltar',\r\n        'jogar': 'jogar',\r\n        'Comece sua aventura': 'Comece sua aventura',\r\n        'Use o comando ajuda a qualquer momento para verificar as opções.': 'Use o comando ajuda a qualquer momento para verificar as opções.',\r\n        'Limpar tela':'Limpar tela',\r\n        'limpar':'limpar',\r\n        'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso': 'Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso',\r\n        'ajuda': 'ajuda',\r\n        'comecar':'comecar',\r\n        'aventura_start': 'Você olha para uma estrada deserta e se pergunta: \"O que estou fazendo aqui?\"',\r\n        \"aventura_continue_1\": 'Você levanta e começa a andar na estrada deserta.',\r\n        \"aventura_continue_2\": \"Você continua a andar na estrada\",\r\n        'Olhar a sua volta': 'Olhar a sua volta',\r\n        'olhar': 'Olhar',\r\n        \"aventura_olhar_1\": \"A sua direita no horizonte você vê uma floresta densa, a sua esquerda você vê uma montanha com neve no topo, a frente uma estrada deserta.\",\r\n        \"aventura_olhar_2\": \"Você vê as arvores da floresta a direita se mexendo, parece que algo grande está se movimentando por ali.\",\r\n        \"aventura_olhar_3\": '\"Espera, tem alguém acenando no topo daquela montanha? *esfrega o olho* Foi só minha imaginação?.\"',\r\n        \"you_see_something\": '\"O que foi isso?\"',\r\n        'Levantar': 'Levantar',\r\n        'Continuar': 'Continuar',\r\n        'carregando': 'Carregando...',\r\n        'Ligar/Desligar input do terminal': 'Alternar input do terminal',\r\n        'Você olha...': 'Você olha...',\r\n        'a estrada a frente': 'A estrada a frente',\r\n        'Começar jogo': 'Começar jogo',\r\n        'Rock Paper Scissors': 'Pedra Papel Tesoura',\r\n        'player_score': 'Sua pontuação: ',\r\n        'ai_score': 'Pontuação AI: ',\r\n        \"sua_aposta\": \"Sua aposta: \",\r\n        'Apostar Cara': 'Apostar Cara',\r\n        'Apostar Coroa': 'Apostar Coroa',\r\n        'Flip a Coin': 'Cara ou coroa',\r\n        'Cara': 'Cara',\r\n        'Coroa': 'Coroa',\r\n\r\n      }\r\n    }\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: false,\r\n\r\n  // have a common namespace used around the full app\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n\r\n  keySeparator: false, // we use content as keys\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n    formatSeparator: \",\"\r\n  },\r\n\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nexport default i18n;","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\n\r\nexport default class Commands extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_menu() {\r\n        const global_context = this.context;\r\n        const commands = {\r\n            teste: {\r\n                description: 'WIP',\r\n                usage: global_context.i18n.t('teste'),\r\n                fn: function () { \r\n                    // global_context.terminal.state.stdout=[]\r\n                    // console.log('global_context.terminal: ', global_context.terminal);\r\n                    global_context.terminal.state.stdout=[]\r\n                        const terminal = global_context.terminal\r\n                        setTimeout(() => {\r\n                            global_context.terminal.state.stdout=[]\r\n                            terminal.pushToStdout(global_context.flip_a_coin_component)\r\n                        }, 1500)\r\n                        return  <p>\r\n                                    {global_context.i18n.t('carregando')}\r\n                                </p>\r\n                }\r\n            },\r\n            ajuda: {\r\n                description: global_context.i18n.t('Lista todos os comandos disponiveis com uma breve descrição e exemplo de uso'),\r\n                usage: global_context.i18n.t('ajuda'),\r\n                fn: function () { \r\n                    global_context.terminal.showHelp()\r\n                }\r\n            },\r\n            limpar: {\r\n                description: global_context.i18n.t('Limpar tela'),\r\n                usage: global_context.i18n.t('limpar'),\r\n                fn: function () { \r\n                    global_context.terminal.state.stdout=[]\r\n                }\r\n            },\r\n            language: {\r\n                description: global_context.i18n.t('Trocar linguagem do sistema'),\r\n                usage: 'language <new_language:(en/pt-BR)>',\r\n                fn: function (newlang) { \r\n                    const valid_languages = ['en','pt-BR']\r\n                    if (!valid_languages.includes(newlang)) return <p>{global_context.i18n.t(\"Comando inválido!\")}<br/>{global_context.i18n.t(\"Exemplo do comando\")}<i>language</i> en</p>\r\n                    global_context.i18n.changeLanguage(newlang)\r\n                    window.location.reload(false);\r\n                }\r\n            },\r\n            lista: {\r\n                description: global_context.i18n.t('Lista de jogos instalados'),\r\n                usage: global_context.i18n.t('lista'),\r\n                fn: function () { \r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    const lista = []\r\n                    lista_jogos.forEach(nome_jogo => {\r\n                        lista.push(nome_jogo + ' : ' + global_context.jogos[nome_jogo].descricao)\r\n                    })\r\n                    return global_context.formatListResult(global_context.i18n.t('Lista de jogos instalados'), lista)\r\n                }\r\n            },\r\n            jogar: {\r\n                description: global_context.i18n.t('Jogar um dos jogos disponíveis na memória'),\r\n                usage: global_context.i18n.t('jogar <nome_do_jogo>'),\r\n                fn: function (nome_do_jogo) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>{global_context.i18n.t(\"jogar\")}</i> 1</p>\r\n                    if (!nome_do_jogo) return <div><p>{global_context.i18n.t('Jogo inválido, veja a lista de jogos.')}</p>{exemplo_do_comando}</div>\r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    if (!Number.isNaN(nome_do_jogo)){\r\n                        if(nome_do_jogo<=lista_jogos.length){\r\n                            global_context.jogos[lista_jogos[nome_do_jogo-1]].fn()\r\n                            return [lista_jogos[nome_do_jogo-1], <br/>, global_context.jogos[lista_jogos[nome_do_jogo-1]].descricao, <br/>, global_context.jogos[lista_jogos[nome_do_jogo-1]].instrucoes]\r\n                        }\r\n                    }\r\n                    if (lista_jogos.includes(nome_do_jogo)){\r\n                        global_context.jogos[nome_do_jogo].fn()\r\n                        return [nome_do_jogo, <br/>, global_context.jogos[nome_do_jogo].descricao, <br/>, global_context.jogos[nome_do_jogo].instrucoes]\r\n                    } else {\r\n                        return global_context.i18n.t('Jogo inválido, veja a lista de jogos.')\r\n                    }\r\n                }\r\n            },\r\n            login: {\r\n                description: global_context.i18n.t('Efetuar Login.'),\r\n                usage: global_context.i18n.t('login <usuario> <senha>'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>login</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (localStorage.getItem('@consolestation/usuario') === usuario &&\r\n                        localStorage.getItem('@consolestation/senha') === senha) {\r\n                            global_context.setUsuarioLogado(usuario);\r\n                            global_context.user = usuario;\r\n                            return global_context.i18n.t('Usuário logado!')\r\n                    }\r\n                    return <div><p>{global_context.i18n.t(\"Credenciais Inválidas!\")}</p>{exemplo_do_comando}</div>\r\n                }\r\n            },\r\n            registrar: {\r\n                description: global_context.i18n.t('Efetuar cadastro de usuário.'),\r\n                usage: global_context.i18n.t('registrar_example'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>{global_context.i18n.t(\"registrar\")}</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (!usuario || !senha) return <div><p>{global_context.i18n.t(\"Senha e Usuário requerido!\")}</p>{exemplo_do_comando}</div>\r\n                    if (senha.length !== 4) return <div><p>{global_context.i18n.t(\"Senha Inválida!\")}</p>{exemplo_do_comando}</div>\r\n                    if (usuario.length > 30 || usuario.length === 0) return <div><p>{global_context.i18n.t(\"Usuário Inválido!\")}</p>{exemplo_do_comando}</div>\r\n                    localStorage.setItem('@consolestation/usuario', usuario);\r\n                    localStorage.setItem('@consolestation/senha', senha);\r\n                    return <p>\r\n                        {global_context.i18n.t(\"Usuário registrado com sucesso!\")}<br/>\r\n                        {global_context.i18n.t(\"Usuário\")}: {usuario}<br/>\r\n                        {global_context.i18n.t(\"Senha\")}: {senha}<br/>\r\n                        {global_context.i18n.t(\"Faça o Login para usa-lo como usuário atual.\")}\r\n                    </p>\r\n                }\r\n            }\r\n        }    \r\n        if (localStorage.getItem('i18nextLng') === 'en') {\r\n            const commands_en = {\r\n                test: commands.teste,\r\n                help: commands.ajuda,\r\n                clear: commands.limpar,\r\n                language: commands.language,\r\n                list: commands.lista,\r\n                play: commands.jogar,\r\n                login: commands.login,\r\n                register: commands.registrar,\r\n\r\n            }\r\n            return commands_en\r\n        }\r\n        return commands\r\n    }\r\n\r\n    \r\n}","import React from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\nimport { Image } from 'react-bootstrap';\r\n\r\nexport default class Jogos extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_jogos() {\r\n        const global_context = this.context;\r\n        \r\n        const finish_commands_config = (global_context, local_commands, local_commands_en) => {\r\n            const main_menu_commands = global_context.commands_instance.make_menu()\r\n            if (localStorage.getItem('i18nextLng') === 'en'){\r\n                local_commands_en.help = main_menu_commands.help\r\n                local_commands_en.clear = main_menu_commands.clear\r\n                global_context.setCommands(local_commands_en)\r\n            } else {\r\n                local_commands.ajuda = main_menu_commands.ajuda\r\n                local_commands.limpar = main_menu_commands.limpar\r\n                global_context.setCommands(local_commands)\r\n            }\r\n            global_context.terminal.state.stdout=[]\r\n        }\r\n        const voltar_option = {\r\n            description: global_context.i18n.t('Volta para o menu principal'),\r\n            usage: global_context.i18n.t('voltar'),\r\n            fn: function () {\r\n                global_context.setCommands(global_context.commands_instance.make_menu());\r\n                global_context.terminal.state.stdout=[]\r\n                return global_context.i18n.t('Voltando ao menu principal!')\r\n            }\r\n        }\r\n\r\n        const default_fn = function(game_component) {\r\n            const local_commands = {\r\n                voltar: voltar_option,\r\n                comecar: {\r\n                    description: global_context.i18n.t('Começar jogo'),\r\n                    usage: global_context.i18n.t('comecar'),\r\n                    fn: () => {\r\n                        global_context.terminal.state.stdout=[]\r\n                        const terminal = global_context.terminal\r\n                        setTimeout(() => {\r\n                            global_context.terminal.state.stdout=[]\r\n                            terminal.pushToStdout(game_component)\r\n                        }, 2500)\r\n                        return  <p>\r\n                                    <Image src={process.env.PUBLIC_URL + \"/loading.gif\"} rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                                    {global_context.i18n.t('carregando')}\r\n                                </p>\r\n                    }\r\n                },\r\n            }\r\n            const local_commands_en ={\r\n                back: local_commands.voltar,\r\n                start: local_commands.comecar,\r\n            }\r\n            finish_commands_config(global_context, local_commands, local_commands_en)\r\n        }\r\n\r\n        const jogos = {\r\n            pedra_papel_tesoura: {\r\n                'descricao': global_context.i18n.t('Jogo de pedra, papel e tesoura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura'),\r\n                fn: () => {\r\n                    default_fn(global_context.rock_paper_scissors_component)\r\n                }\r\n            },\r\n            jogue_a_moeda: {\r\n                'descricao': global_context.i18n.t('Cara ou coroa?'),\r\n                'instrucoes': global_context.i18n.t('Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa'),\r\n                fn: () => {\r\n                    default_fn(global_context.flip_a_coin_component)\r\n                }\r\n            },\r\n            a_aventura: {\r\n                'descricao': global_context.i18n.t('Comece sua aventura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando ajuda a qualquer momento para verificar as opções.'),\r\n                fn: () => {\r\n                    default_fn(global_context.aventura_game_component)\r\n                }\r\n            },\r\n        }\r\n        if (localStorage.getItem('i18nextLng') === 'en') {\r\n            const jogos_en = {\r\n                rock_paper_scissors: jogos.pedra_papel_tesoura,\r\n                flip_a_coin: jogos.jogue_a_moeda,\r\n                the_adventure: jogos.a_aventura,\r\n            }\r\n            return jogos_en\r\n        }\r\n        return jogos\r\n    }\r\n\r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport './main.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConsolePage from './pages/console';\r\nimport { GlobalContextProvider } from './helpers/GlobalContext';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nimport Commands from './classes/commands';\r\nimport Jogos from './classes/jogos';\r\n\r\ntoast.configure()\r\n\r\nexport default props => {\r\n    const [actual_page, setPage] = useState(<ConsolePage />);\r\n    const [global_context, setGlobalContext] = useState({});\r\n    const [terminal, setTerminal] = useState();\r\n    const [global_state, setGlobalState] = useState({});\r\n\r\n    global_context.setPage = setPage;\r\n    global_context.user = 'user';\r\n    global_context.i18n = i18n;\r\n    global_context.terminal = terminal;\r\n    global_context.setTerminal = setTerminal;\r\n    global_context.commands_instance = new Commands({'context': global_context})\r\n    global_context.jogos_instance = new Jogos({'context': global_context})\r\n    global_context.global_state = global_state\r\n    global_context.setGlobalState = setGlobalState\r\n\r\n    return <div className='wrapper'>            \r\n                <GlobalContextProvider value={{global_context, setGlobalContext}}>\r\n                    <I18nextProvider i18n={i18n}>\r\n                        {actual_page}\r\n                    </I18nextProvider>\r\n                </GlobalContextProvider>\r\n        </div>\r\n        \r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './main/app'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}