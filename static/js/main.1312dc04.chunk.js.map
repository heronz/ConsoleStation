{"version":3,"sources":["main/helpers/GlobalContext.jsx","main/pages/console.jsx","main/app.jsx","index.jsx"],"names":["GlobalContext","React","createContext","GlobalContextProvider","Provider","getRndInteger","min","max","Math","floor","random","formatResult","lines","size","result_size","filler_char","filler_line","repeat","header","footer","style","transform","width","formated_lines","forEach","line","fillers","length","teve_splice","push","sliced_lines","slice","i","pop","lineHeight","props","useContext","global_context","setGlobalContext","useState","user","usuario_logado","setUsuarioLogado","terminal_ref","createRef","jogos","pedra_papel_tesoura","fn","local_commands","voltar","description","usage","setCommands","main_menu_commands","usar","jogada","exemplo_do_comando","opcoes","resultado","includes","jogada_ai","venceu_ou_empate","flip_a_coin","jogar","hidden","teste","lista","lista_jogos","Object","keys","nome_jogo","descricao","console","log","nome_do_jogo","instrucoes","login","usuario","senha","localStorage","getItem","registrar","setItem","commands","className","Row","marginLeft","Button","variant","disabled","ref","welcomeMessage","Image","src","rounded","marginBottom","promptLabel","dangerMode","autoFocus","height","margin","minWidth","minHeight","position","top","bottom","left","right","contentStyle","toast","configure","actual_page","setPage","value","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.1312dc04.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nconst GlobalContextProvider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport { GlobalContextProvider as GlobalContextProvider };","import React, {useState, useContext} from 'react';\r\nimport Terminal from 'react-console-emulator'\r\nimport { Button, Row, Image} from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport GlobalContext from '../helpers/GlobalContext';\r\n\r\nfunction getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}\r\n\r\nfunction formatResult(lines = [], size=35) {\r\n    const result_size = size\r\n    const filler_char = '+'\r\n    const filler_line = <div>|{filler_char.repeat(result_size-2)}|<br/></div>\r\n    var header =<div>{'_'.repeat(result_size)}<br/>{filler_line}</div>\r\n    var footer =<div>{filler_line}<div style={{transform: \"rotate(180deg)\", width: \"max-content\"}}>{'_'.repeat(result_size)}</div></div>\r\n    var formated_lines = []\r\n    lines.forEach((line) => {\r\n        var fillers = result_size-4-line.length\r\n        var teve_splice = false\r\n        if (line.length < result_size) {\r\n            formated_lines.push(<div>|{filler_char.repeat(Math.floor(fillers/2))} {line} {filler_char.repeat(Math.floor(fillers/2)+(fillers%2===1?1:0))}|<br/></div>)\r\n        } else {\r\n            teve_splice = true\r\n            const sliced_lines = Math.floor(line.length/ (result_size-4))+1\r\n            var slice = ''\r\n            var i=0\r\n            while(i<sliced_lines){\r\n                slice = line.slice(((result_size-2)*i), ((result_size-2)*(i+1)))\r\n                fillers = result_size-2-slice.length\r\n                formated_lines.push(<div>|{slice}{filler_char.repeat(Math.floor(fillers))}|<br/></div>)\r\n                i++\r\n            }\r\n            formated_lines.push(filler_line)\r\n        }\r\n        if (teve_splice) formated_lines.pop()\r\n    })\r\n    return <p style={{lineHeight:'13px'}}>{header} {formated_lines} {footer}</p>\r\n}\r\n\r\n  export default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const [usuario_logado, setUsuarioLogado] = useState(global_context.user);\r\n    const terminal_ref = React.createRef()\r\n\r\n    const jogos = {\r\n        pedra_papel_tesoura: {\r\n            'descricao': 'Jogo de pedra, papel e tesoura',\r\n            'instrucoes': 'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura',\r\n            fn: function () {\r\n                const local_commands = {\r\n                    voltar: {\r\n                        description: 'Volta para o menu principal',\r\n                        usage: 'voltar',\r\n                        fn: function () {\r\n                            setCommands(main_menu_commands);\r\n                            return 'Voltando ao menu principal!'\r\n                        }\r\n                    },\r\n                    usar: {\r\n                        description: 'Joga contra o computador usando pedra, papel ou tesoura',\r\n                        usage: 'usar <pedra ou papel ou tesoura>',\r\n                        fn: function (jogada) {\r\n                            const exemplo_do_comando = <p>Exemplo do comando: <i>usar</i> pedra</p>\r\n                            const opcoes = ['pedra', 'papel', 'tesoura'];\r\n                            const resultado = []\r\n                            if (opcoes.includes(jogada)) {\r\n                                const jogada_ai = opcoes[getRndInteger(0,2)]\r\n                                var venceu_ou_empate = false\r\n                                resultado.push(\"Sua Jogada: \"+jogada)\r\n                                resultado.push(\"Minha jogada(AI): \"+jogada_ai)                                \r\n                                if (jogada_ai === jogada) {\r\n                                    resultado.push(\"Um empate!\")\r\n                                    venceu_ou_empate=true\r\n                                }\r\n                                else {\r\n                                    switch (jogada) {\r\n                                        case 'pedra':\r\n                                            if (jogada_ai==='tesoura') {\r\n                                                resultado.push(\"Você ganhou!\")\r\n                                                venceu_ou_empate=true\r\n                                            }\r\n                                            break;\r\n    \r\n                                        case 'papel':\r\n                                            if (jogada_ai==='pedra') {\r\n                                                resultado.push(\"Você ganhou!\")\r\n                                                venceu_ou_empate=true\r\n                                            }\r\n                                            break;\r\n    \r\n                                        case 'tesoura':\r\n                                            if (jogada_ai==='papel') {\r\n                                                resultado.push(\"Você ganhou!\")\r\n                                                venceu_ou_empate=true\r\n                                            }\r\n                                            break;\r\n                                    \r\n                                        default:\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                if (!venceu_ou_empate) resultado.push(\"Você perdeu!\")\r\n                                return <div>{formatResult(resultado)}</div>\r\n                            }\r\n                            return <div><p>Opção de jogada inválida!</p>{exemplo_do_comando}</div>\r\n                        }\r\n                    },\r\n                }\r\n                setCommands(local_commands)\r\n            }\r\n        },\r\n        flip_a_coin: {\r\n            'descricao': 'Cara ou coroa?',\r\n            'instrucoes': 'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa',\r\n            fn: function () {\r\n                const local_commands = {\r\n                    voltar: {\r\n                        description: 'Volta para o menu principal',\r\n                        usage: 'voltar',\r\n                        fn: function () {\r\n                            setCommands(main_menu_commands);\r\n                            return 'Voltando ao menu principal!'\r\n                        }\r\n                    },\r\n                    jogar: {\r\n                        description: 'Joga uma moeda',\r\n                        usage: 'jogar',\r\n                        fn: function () {\r\n                            switch (getRndInteger(0,1)) {\r\n                                case 0:\r\n                                    return formatResult(['A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado', '-','Resultado: Cara']);\r\n                                case 1:\r\n                                    const rare_message = getRndInteger(0,99);\r\n                                    var hidden = '';\r\n                                    if (rare_message > 90) {\r\n                                        hidden = 'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, '\r\n                                    }\r\n                                    return formatResult(['A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,'+hidden+' e quando chega vê o resultado', '-', 'Resultado: Coroa']);\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }\r\n                    },\r\n                }\r\n                setCommands(local_commands)\r\n            }\r\n        },\r\n    }\r\n\r\n    const main_menu_commands = {\r\n        teste: {\r\n            description: 'WIP',\r\n            usage: 'teste',\r\n            fn: function () { \r\n                jogos.flip_a_coin.fn();\r\n            }\r\n        },\r\n        lista: {\r\n            description: 'Lista de jogos instalados',\r\n            usage: 'lista',\r\n            fn: function () { \r\n                const lista_jogos = Object.keys(jogos)\r\n                const lista = ['Lista de jogos instalados:', '-']\r\n                lista_jogos.forEach(nome_jogo => {\r\n                    lista.push(nome_jogo + ' : ' + jogos[nome_jogo].descricao)\r\n                    console.log('jogos[nome_jogo]: ', jogos[nome_jogo]);\r\n                })\r\n                return formatResult(lista)\r\n            }\r\n        },\r\n        jogar: {\r\n            description: 'Jogar um dos jogos disponíveis na memória',\r\n            usage: 'jogar <nome_do_jogo>',\r\n            fn: function (nome_do_jogo) {\r\n                const lista_jogos = Object.keys(jogos)\r\n                if (lista_jogos.includes(nome_do_jogo)){\r\n                    jogos[nome_do_jogo].fn()\r\n                    return [nome_do_jogo, <br/>, jogos[nome_do_jogo].descricao, <br/>, jogos[nome_do_jogo].instrucoes]\r\n                } else {\r\n                    return 'Jogo inválido, veja a lista de jogos.'\r\n                }\r\n            }\r\n        },\r\n        login: {\r\n            description: 'Efetuar Login.',\r\n            usage: 'login <usuario> <senha>',\r\n            fn: function (usuario, senha) {\r\n                const exemplo_do_comando = <p>Exemplo do comando: <i>login</i> Nome_de_Usuario 1234</p>\r\n                if (localStorage.getItem('@consolestation/usuario') === usuario &&\r\n                    localStorage.getItem('@consolestation/senha') === senha) {\r\n                        setUsuarioLogado(usuario);\r\n                        setGlobalContext({'user': usuario});\r\n                        return 'Usuário logado!'\r\n                }\r\n                return <div><p>Credenciais Inválidas!</p>{exemplo_do_comando}</div>\r\n            }\r\n        },\r\n        registrar: {\r\n            description: 'Efetuar cadastro de usuário.',\r\n            usage: 'registrar <usuario: Máximo de 30 caracteres> <senha: Apenas 4 caracteres>',\r\n            fn: function (usuario, senha) {\r\n                const exemplo_do_comando = <p>Exemplo do comando: <i>registrar</i> Nome_de_Usuario 1234</p>\r\n                if (!usuario || !senha) return <div><p>Senha e Usuário requerido!</p>{exemplo_do_comando}</div>\r\n                if (senha.length !== 4) return <div><p>Senha Inválida!</p>{exemplo_do_comando}</div>\r\n                if (usuario.length > 30 || usuario.length === 0) return <div><p>Usuário Inválido!</p>{exemplo_do_comando}</div>\r\n                localStorage.setItem('@consolestation/usuario', usuario);\r\n                localStorage.setItem('@consolestation/senha', senha);\r\n                return <p>\r\n                    Usuário registrado com sucesso!<br/>\r\n                    Usuário: {usuario}<br/>\r\n                    Senha: {senha}<br/>\r\n                    Faça o Login para usa-lo como usuário atual.\r\n                </p>\r\n            }\r\n        }\r\n    }    \r\n    const [commands, setCommands] = useState(main_menu_commands);\r\n\r\n    return (\r\n          <div className=\"content-console\">\r\n              <div className=\"win-bar\">\r\n                  <Row>\r\n                    <h3 style={{marginLeft: \"2vh\"}}>ConsoleStation</h3>\r\n                    <div className=\"win-control-buttons\">\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><MinimizeIcon /></Button>\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><CloseIcon /></Button>\r\n                    </div>\r\n                  </Row>\r\n                  <Row>\r\n                    <Terminal\r\n                    ref={terminal_ref}\r\n                    commands={commands}\r\n                    welcomeMessage={<div>\r\n                            <p>\r\n                            <Image src=\"../cs-logo.png\" rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                            <h3>Seja bem vindo ao ConsoleStation</h3><br/>\r\n                            Para ver uma lista de comandos digite <i>help</i> e aperte enter<br/>\r\n                            Para limpar o terminal digite <i>clear</i></p>\r\n                        </div>}\r\n                    promptLabel={usuario_logado + '@Consolestation:~$'}\r\n                    dangerMode\r\n                    autoFocus\r\n                    style={{\r\n                        width:\"98%\", \r\n                        height:\"92%\", \r\n                        margin:\"50px auto\",\r\n                        minWidth: \"98%\", \r\n                        minHeight: \"2%\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        }}\r\n                    contentStyle={{\r\n                        height: \"95%\"\r\n                    }}\r\n                    />\r\n                  </Row>\r\n              </div>\r\n          </div>\r\n      )\r\n    }","import React, { useState } from 'react';\r\nimport './main.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConsolePage from './pages/console';\r\nimport { GlobalContextProvider } from './helpers/GlobalContext';\r\n\r\ntoast.configure()\r\n\r\nexport default props => {\r\n    const [actual_page, setPage] = useState(<ConsolePage />);\r\n    const [global_context, setGlobalContext] = useState({});\r\n\r\n    global_context.setPage = setPage;\r\n    global_context.user = 'user'\r\n\r\n    return <div className='wrapper'>            \r\n            <GlobalContextProvider value={{global_context, setGlobalContext}}>\r\n                {actual_page}\r\n            </GlobalContextProvider>\r\n        </div>\r\n        \r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './main/app'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}