{"version":3,"sources":["main/helpers/GlobalContext.jsx","main/pages/console.jsx","i18n.js","main/classes/commands.jsx","main/classes/jogos.jsx","main/app.jsx","index.jsx"],"names":["GlobalContext","React","createContext","GlobalContextProvider","Provider","getRndInteger","min","max","Math","floor","random","formatResult","lines","size","result_size","filler_char","filler_line","repeat","header","footer","style","transform","width","formated_lines","forEach","line","fillers","length","teve_splice","push","sliced_lines","slice","i","pop","lineHeight","props","useContext","global_context","setGlobalContext","useState","user","usuario_logado","setUsuarioLogado","terminal_ref","createRef","useEffect","setTerminal","current","jogos","setCommands","setJogos","jogos_instance","make_jogos","commands_instance","make_menu","commands","className","Row","marginLeft","Button","variant","disabled","ref","welcomeMessage","Image","src","process","rounded","marginBottom","i18n","t","promptLabel","commandCallback","result","next_callback","dangerMode","autoFocus","height","margin","minWidth","minHeight","position","top","bottom","left","right","contentStyle","use","LanguageDetector","init","resources","en","translations","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","Commands","context","state","this","teste","description","usage","fn","language","newlang","includes","changeLanguage","window","location","reload","lista","lista_jogos","Object","keys","nome_jogo","descricao","jogar","nome_do_jogo","instrucoes","login","usuario","senha","exemplo_do_comando","localStorage","getItem","registrar","setItem","Component","contextType","Jogos","pedra_papel_tesoura","local_commands","voltar","usar","jogada","opcoes","resultado","jogada_ai","venceu_ou_empate","flip_a_coin","hidden","toast","configure","actual_page","setPage","terminal","value","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf98a224.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nconst GlobalContextProvider = GlobalContext.Provider;\r\n\r\nexport default GlobalContext;\r\n\r\nexport { GlobalContextProvider as GlobalContextProvider };","import React, {useState, useContext, useEffect} from 'react';\r\nimport Terminal from 'react-console-emulator'\r\nimport { Button, Row, Image} from 'react-bootstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport GlobalContext from '../helpers/GlobalContext';\r\n\r\nfunction getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}\r\n\r\nfunction formatResult(lines = [], size=35) {\r\n    const result_size = size\r\n    const filler_char = '+'\r\n    const filler_line = <div>|{filler_char.repeat(result_size-2)}|<br/></div>\r\n    var header =<div>{'_'.repeat(result_size)}<br/>{filler_line}</div>\r\n    var footer =<div>{filler_line}<div style={{transform: \"rotate(180deg)\", width: \"max-content\"}}>{'_'.repeat(result_size)}</div></div>\r\n    var formated_lines = []\r\n    lines.forEach((line) => {\r\n        var fillers = result_size-4-line.length\r\n        var teve_splice = false\r\n        if (line.length < result_size) {\r\n            formated_lines.push(<div>|{filler_char.repeat(Math.floor(fillers/2))} {line} {filler_char.repeat(Math.floor(fillers/2)+(fillers%2===1?1:0))}|<br/></div>)\r\n        } else {\r\n            teve_splice = true\r\n            const sliced_lines = Math.floor(line.length/ (result_size-4))+1\r\n            var slice = ''\r\n            var i=0\r\n            while(i<sliced_lines){\r\n                slice = line.slice(((result_size-2)*i), ((result_size-2)*(i+1)))\r\n                fillers = result_size-2-slice.length\r\n                formated_lines.push(<div>|{slice}{filler_char.repeat(Math.floor(fillers))}|<br/></div>)\r\n                i++\r\n            }\r\n            formated_lines.push(filler_line)\r\n        }\r\n        if (teve_splice) formated_lines.pop()\r\n    })\r\n    return <p style={{lineHeight:'13px'}}>{header} {formated_lines} {footer}</p>\r\n}\r\n\r\nexport default props => {\r\n    const {global_context, setGlobalContext} = useContext(GlobalContext)\r\n    const [usuario_logado, setUsuarioLogado] = useState(global_context.user);\r\n    const terminal_ref = React.createRef()\r\n    useEffect(() => {\r\n        global_context.setTerminal(terminal_ref.current);\r\n        global_context.jogos= jogos\r\n        global_context.formatResult = formatResult\r\n        global_context.setUsuarioLogado = setUsuarioLogado\r\n        global_context.setCommands = setCommands\r\n        global_context.setJogos = setJogos\r\n        global_context.getRndInteger = getRndInteger\r\n    })\r\n    \r\n    const [jogos, setJogos] = useState(global_context.jogos_instance.make_jogos());\r\n    const [commands, setCommands] = useState(global_context.commands_instance.make_menu());\r\n    const callback_terminal = (result) => {\r\n        if (global_context.next_callback) global_context.next_callback()\r\n    }\r\n\r\n    return (\r\n          <div className=\"content-console\">\r\n              <div className=\"win-bar\">\r\n                  <Row>\r\n                    <h3 style={{marginLeft: \"2vh\"}}>ConsoleStation</h3>\r\n                    <div className=\"win-control-buttons\">\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><MinimizeIcon /></Button>\r\n                        <Button variant=\"outline-dark\" className=\"win-control-btn mine\" disabled={true}><CloseIcon /></Button>\r\n                    </div>\r\n                  </Row>\r\n                  <Row>\r\n                    <Terminal\r\n                    ref={terminal_ref}\r\n                    commands={commands}\r\n                    welcomeMessage={<div>\r\n                            <p>\r\n                            <Image src={process.env.PUBLIC_URL + \"/cs-logo.png\"} rounded style={{marginBottom: \"10px\"}}/><br/>\r\n                            <h3>{global_context.i18n.t(\"Seja bem vindo ao ConsoleStation\")}</h3><br/>\r\n                            {global_context.i18n.t(\"Para ver uma lista de comandos digite \")}<i>help</i><br/>\r\n                            {global_context.i18n.t(\"Para limpar o terminal digite \")}<i>clear</i>                            \r\n                            </p>\r\n                        </div>}\r\n                    promptLabel={usuario_logado + '@Consolestation:~$'}\r\n                    commandCallback={callback_terminal}\r\n                    dangerMode\r\n                    autoFocus\r\n                    style={{\r\n                        width:\"98%\", \r\n                        height:\"92%\", \r\n                        margin:\"50px auto\",\r\n                        minWidth: \"98%\", \r\n                        minHeight: \"2%\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        }}\r\n                    contentStyle={{\r\n                        height: \"95%\"\r\n                    }}\r\n                    />\r\n                  </Row>\r\n              </div>\r\n          </div>\r\n      )\r\n    }","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  // we init with resources\r\n  resources: {\r\n    en: {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Welcome to ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"To see a list of commands use \",\r\n        \"Para limpar o terminal digite \": \"To clear the terminal use \",\r\n        'Trocar linguagem do sistema': 'Change system language',\r\n        \"Comando inválido!\": \"Command Invalid\",\r\n        \"Exemplo do comando\": \"Command example: \",\r\n        'Lista de jogos instalados': 'List of installed games',\r\n        'Jogar um dos jogos disponíveis na memória': 'Play one of the installed games',\r\n        'jogar <nome_do_jogo>': 'jogar <game_name>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Invalid game, see the list of installed games.',\r\n        'Efetuar Login.': 'Make login.',\r\n        'login <usuario> <senha>': 'login <user> <password>',\r\n        \"Nome_de_Usuario\": \"Username\",\r\n        'Usuário logado!': 'Login success!',\r\n        \"Credenciais Inválidas!\": \"Invalid login information!\",\r\n        'Efetuar cadastro de usuário.': 'Register new user.',\r\n        'registrar_example': 'registrar <user: 30 characters max> <password: Exactly 4 characters>',\r\n        \"Senha e Usuário requerido!\": \"User and password required\",\r\n        \"Senha Inválida!\": \"Invalid password\",\r\n        \"Usuário Inválido!\": \"Invalid user\",\r\n        \"Usuário registrado com sucesso!\": \"User registration successfull!\",\r\n        \"Usuário\": \"user\",\r\n        \"Senha\": \"password\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Make login to use it\",\r\n        'Jogo de pedra, papel e tesoura': 'Rock, paper and scissors',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use command usar <choice> to play against me, the choice can be rock, paper or scissors',\r\n        'Volta para o menu principal': 'Go to main menu',\r\n        'Voltando ao menu principal!': 'Goin to main menu',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Play against the computer using rock, paper or scissors',\r\n        'usar <pedra ou papel ou tesoura>': 'usar <rock or paper or scissors>',\r\n        'pedra': 'rock',\r\n        'papel': 'paper',\r\n        'tesoura': 'scissors',\r\n        \"sua_jogada\": \"Your move: \",\r\n        \"ai_jogada\": \"My move(AI): \",\r\n        \"Um empate!\": \"A draw\",\r\n        \"Você ganhou!\": \"You win\",\r\n        \"Você perdeu!\": \"You lose\",\r\n        \"Opção de jogada inválida!\": \"Invalid choice\",\r\n        'Cara ou coroa?': 'Heads or Tails?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': \"Use jogar to toss a coin and see if it's heads or tails\",\r\n        'Joga uma moeda': 'Toss a coin into the air',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'The coin flips in the air for some time and then hits the ground, you stand and go see what landed',\r\n        'resultado_cara': 'Result: Heads',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': \"go trough a unknown figure that wasn't there 5 minutes before, \",\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'The coin flips in the air for some time, bouncing on the ground before landing a little too far, you run after it, ',\r\n        ' e quando chega vê o resultado': ' and when you catch it you see what landed',\r\n        'resultado_coroa': 'Result: Tails',\r\n\r\n      }\r\n    },\r\n    'pt-br': {\r\n      translations: {\r\n        \"Seja bem vindo ao ConsoleStation\":\"Seja bem vindo ao ConsoleStation\",\r\n        \"Para ver uma lista de comandos digite \": \"Para ver a lista de comandos use \",\r\n        \"Para limpar o terminal digite \": \"Para limpar o terminal use \",\r\n        'Trocar linguagem do sistema': 'Trocar linguagem do sistema',\r\n        \"Comando inválido!\":\"Comando inválido\",\r\n        \"Exemplo do comando\":\"Exemplo do comando: \",\r\n        'Lista de jogos instalados': 'Lista de jogos instalados',\r\n        'Jogar um dos jogos disponíveis na memória': 'Jogar um dos jogos disponíveis na memória',\r\n        'jogar <nome_do_jogo>': 'jogar <nome_do_jogo>',\r\n        'Jogo inválido, veja a lista de jogos.': 'Jogo inválido, veja a lista de jogos disponíveis.',\r\n        'Efetuar Login.': 'Efetuar Login.',\r\n        'login <usuario> <senha>': 'login <usuario> <senha>',\r\n        \"Nome_de_Usuario\": \"Nome_de_Usuario\",\r\n        'Usuário logado!': 'Usuário logado!',\r\n        \"Credenciais Inválidas!\": \"Credenciais Inválidas!\",\r\n        'Efetuar cadastro de usuário.': 'Efetuar cadastro de usuário.',\r\n        'registrar_example': 'registrar <usuario: Máximo de 30 caracteres> <senha: Apenas 4 caracteres>',\r\n        \"Senha e Usuário requerido!\": \"Senha e Usuário requerido!\",\r\n        \"Senha Inválida!\": \"Senha Inválida!\",\r\n        \"Usuário Inválido!\": \"Usuário Inválido!\",\r\n        \"Usuário registrado com sucesso!\": \"Usuário registrado com sucesso!\",\r\n        \"Usuário\": \"Usuário\",\r\n        \"Senha\": \"Senha\",\r\n        \"Faça o Login para usa-lo como usuário atual.\": \"Faça o Login para usa-lo como usuário atual.\",\r\n        'Jogo de pedra, papel e tesoura': 'Jogo de pedra, papel e tesoura',\r\n        'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura': 'Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura',\r\n        'Volta para o menu principal': 'Volta para o menu principal',\r\n        'Voltando ao menu principal!': 'Voltando ao menu principal!',\r\n        'Joga contra o computador usando pedra, papel ou tesoura': 'Joga contra o computador usando pedra, papel ou tesoura',\r\n        'usar <pedra ou papel ou tesoura>': 'usar <pedra ou papel ou tesoura>',\r\n        'pedra': 'pedra',\r\n        'papel': 'papel',\r\n        'tesoura': 'tesoura',\r\n        \"sua_jogada\": \"Sua Jogada: \",\r\n        \"ai_jogada\": \"Minha jogada(AI): \",\r\n        \"Um empate!\": \"Um empate!\",\r\n        \"Você ganhou!\": \"Você ganhou!\",\r\n        \"Você perdeu!\": \"Você perdeu!\",\r\n        \"Opção de jogada inválida!\": \"Opção de jogada inválida!\",\r\n        'Cara ou coroa?': 'Cara ou coroa?',\r\n        'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa': 'Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa',\r\n        'Joga uma moeda': 'Joga uma moeda',\r\n        'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado': 'A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado',\r\n        'resultado_cara': 'Resultado: Cara',\r\n        'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ': 'passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ',\r\n        'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,': 'A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,',\r\n        ' e quando chega vê o resultado': ' e quando chega vê o resultado',\r\n        'resultado_coroa': 'Resultado: Coroa',\r\n\r\n      }\r\n    }\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: true,\r\n\r\n  // have a common namespace used around the full app\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n\r\n  keySeparator: false, // we use content as keys\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n    formatSeparator: \",\"\r\n  },\r\n\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nexport default i18n;","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\n\r\nexport default class Commands extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_menu() {\r\n        const global_context = this.context;\r\n        return {\r\n            teste: {\r\n                description: 'WIP',\r\n                usage: 'teste',\r\n                fn: function () { \r\n                    return 'TESTE'\r\n                }\r\n            },\r\n            language: {\r\n                description: global_context.i18n.t('Trocar linguagem do sistema'),\r\n                usage: 'language <new_language:(en/pt-br)>',\r\n                fn: function (newlang) { \r\n                    const valid_languages = ['en','pt-br']\r\n                    if (!valid_languages.includes(newlang)) return <p>{global_context.i18n.t(\"Comando inválido!\")}<br/>{global_context.i18n.t(\"Exemplo do comando\")}<i>language</i> en</p>\r\n                    global_context.i18n.changeLanguage(newlang)\r\n                    window.location.reload(false);\r\n                }\r\n            },\r\n            lista: {\r\n                description: global_context.i18n.t('Lista de jogos instalados'),\r\n                usage: 'lista',\r\n                fn: function () { \r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    const lista = [global_context.i18n.t('Lista de jogos instalados'), '-']\r\n                    lista_jogos.forEach(nome_jogo => {\r\n                        lista.push(nome_jogo + ' : ' + global_context.jogos[nome_jogo].descricao)\r\n                    })\r\n                    return global_context.formatResult(lista)\r\n                }\r\n            },\r\n            jogar: {\r\n                description: global_context.i18n.t('Jogar um dos jogos disponíveis na memória'),\r\n                usage: global_context.i18n.t('jogar <nome_do_jogo>'),\r\n                fn: function (nome_do_jogo) {\r\n                    const lista_jogos = Object.keys(global_context.jogos)\r\n                    if (lista_jogos.includes(nome_do_jogo)){\r\n                        global_context.jogos[nome_do_jogo].fn()\r\n                        return [nome_do_jogo, <br/>, global_context.jogos[nome_do_jogo].descricao, <br/>, global_context.jogos[nome_do_jogo].instrucoes]\r\n                    } else {\r\n                        return global_context.i18n.t('Jogo inválido, veja a lista de jogos.')\r\n                    }\r\n                }\r\n            },\r\n            login: {\r\n                description: global_context.i18n.t('Efetuar Login.'),\r\n                usage: global_context.i18n.t('login <usuario> <senha>'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>login</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (localStorage.getItem('@consolestation/usuario') === usuario &&\r\n                        localStorage.getItem('@consolestation/senha') === senha) {\r\n                            global_context.setUsuarioLogado(usuario);\r\n                            global_context.user = usuario;\r\n                            return global_context.i18n.t('Usuário logado!')\r\n                    }\r\n                    return <div><p>{global_context.i18n.t(\"Credenciais Inválidas!\")}</p>{exemplo_do_comando}</div>\r\n                }\r\n            },\r\n            registrar: {\r\n                description: global_context.i18n.t('Efetuar cadastro de usuário.'),\r\n                usage: global_context.i18n.t('registrar_example'),\r\n                fn: function (usuario, senha) {\r\n                    const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}<i>registrar</i> {global_context.i18n.t(\"Nome_de_Usuario\")} 1234</p>\r\n                    if (!usuario || !senha) return <div><p>{global_context.i18n.t(\"Senha e Usuário requerido!\")}</p>{exemplo_do_comando}</div>\r\n                    if (senha.length !== 4) return <div><p>{global_context.i18n.t(\"Senha Inválida!\")}</p>{exemplo_do_comando}</div>\r\n                    if (usuario.length > 30 || usuario.length === 0) return <div><p>{global_context.i18n.t(\"Usuário Inválido!\")}</p>{exemplo_do_comando}</div>\r\n                    localStorage.setItem('@consolestation/usuario', usuario);\r\n                    localStorage.setItem('@consolestation/senha', senha);\r\n                    return <p>\r\n                        {global_context.i18n.t(\"Usuário registrado com sucesso!\")}<br/>\r\n                        {global_context.i18n.t(\"Usuário\")}: {usuario}<br/>\r\n                        {global_context.i18n.t(\"Senha\")}: {senha}<br/>\r\n                        {global_context.i18n.t(\"Faça o Login para usa-lo como usuário atual.\")}\r\n                    </p>\r\n                }\r\n            }\r\n        }    \r\n    }\r\n\r\n    \r\n}","import React, { useContext } from 'react';\r\nimport GlobalContext from '../helpers/GlobalContext'\r\n\r\nexport default class Jogos extends React.Component {\r\n    static contextType = GlobalContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.context = props.context;\r\n        this.state = {\r\n\r\n        };\r\n      }\r\n\r\n    make_jogos() {\r\n        const global_context = this.context;\r\n        return {\r\n            pedra_papel_tesoura: {\r\n                'descricao': global_context.i18n.t('Jogo de pedra, papel e tesoura'),\r\n                'instrucoes': global_context.i18n.t('Use o comando usar <jogada> para jogar contra mim, jogada pode ser pedra, papel ou tesoura'),\r\n                fn: function () {\r\n                    const local_commands = {\r\n                        voltar: {\r\n                            description: global_context.i18n.t('Volta para o menu principal'),\r\n                            usage: 'voltar',\r\n                            fn: function () {\r\n                                global_context.setCommands(global_context.commands_instance.make_menu());\r\n                                return global_context.i18n.t('Voltando ao menu principal!')\r\n                            }\r\n                        },\r\n                        usar: {\r\n                            description: global_context.i18n.t('Joga contra o computador usando pedra, papel ou tesoura'),\r\n                            usage: global_context.i18n.t('usar <pedra ou papel ou tesoura>'),\r\n                            fn: function (jogada) {\r\n                                const exemplo_do_comando = <p>{global_context.i18n.t(\"Exemplo do comando\")}: <i>usar</i> {global_context.i18n.t(\"pedra\")}</p>\r\n                                const opcoes = [global_context.i18n.t('pedra'), global_context.i18n.t('papel'), global_context.i18n.t('tesoura')];\r\n                                const resultado = []\r\n                                if (opcoes.includes(jogada)) {\r\n                                    const jogada_ai = opcoes[global_context.getRndInteger(0,2)]\r\n                                    var venceu_ou_empate = false\r\n                                    resultado.push(global_context.i18n.t(\"sua_jogada\")+jogada)\r\n                                    resultado.push(global_context.i18n.t(\"ai_jogada\")+jogada_ai)                                \r\n                                    if (jogada_ai === jogada) {\r\n                                        resultado.push(global_context.i18n.t(\"Um empate!\"))\r\n                                        venceu_ou_empate=true\r\n                                    }\r\n                                    else {\r\n                                        switch (jogada) {\r\n                                            case global_context.i18n.t('pedra'):\r\n                                                if (jogada_ai===global_context.i18n.t('tesoura')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n        \r\n                                            case global_context.i18n.t('papel'):\r\n                                                if (jogada_ai===global_context.i18n.t('pedra')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n        \r\n                                            case global_context.i18n.t('tesoura'):\r\n                                                if (jogada_ai===global_context.i18n.t('papel')) {\r\n                                                    resultado.push(global_context.i18n.t(\"Você ganhou!\"))\r\n                                                    venceu_ou_empate=true\r\n                                                }\r\n                                                break;\r\n                                        \r\n                                            default:\r\n                                                break;\r\n                                        }\r\n                                    }\r\n                                    if (!venceu_ou_empate) resultado.push(global_context.i18n.t(\"Você perdeu!\"))\r\n                                    return <div>{global_context.formatResult(resultado)}</div>\r\n                                }\r\n                                return <div><p>{global_context.i18n.t(\"Opção de jogada inválida!\")}</p>{exemplo_do_comando}</div>\r\n                            }\r\n                        },\r\n                    }\r\n                    global_context.setCommands(local_commands)\r\n                }\r\n            },\r\n            flip_a_coin: {\r\n                'descricao': global_context.i18n.t('Cara ou coroa?'),\r\n                'instrucoes': global_context.i18n.t('Use o comando jogar para jogar uma moeda e ver se dará cara ou coroa'),\r\n                fn: function () {\r\n                    const local_commands = {\r\n                        voltar: {\r\n                            description: global_context.i18n.t('Volta para o menu principal'),\r\n                            usage: 'voltar',\r\n                            fn: function () {\r\n                                global_context.setCommands(global_context.commands_instance.make_menu());\r\n                                return global_context.i18n.t('Voltando ao menu principal!')\r\n                            }\r\n                        },\r\n                        jogar: {\r\n                            description: global_context.i18n.t('Joga uma moeda'),\r\n                            usage: 'jogar',\r\n                            fn: function () {\r\n                                switch (global_context.getRndInteger(0,1)) {\r\n                                    case 0:\r\n                                        return global_context.formatResult([\r\n                                            global_context.i18n.t('A moeda roda no ar por algum tempo e caí no chão, você levanta e vê o resultado'), \r\n                                            '-',\r\n                                            global_context.i18n.t('resultado_cara')]);\r\n                                    case 1:\r\n                                        const rare_message = global_context.getRndInteger(0,99);\r\n                                        var hidden = '';\r\n                                        if (rare_message > 90) {\r\n                                            hidden = global_context.i18n.t('passa por uma figura desconhecida que não estava ali a 5 minutos atrás, ')\r\n                                        }\r\n                                        return global_context.formatResult([\r\n                                            global_context.i18n.t('A moeda roda no ar por algum tempo, quica no chão e vai parar longe, você corre atrás dela,')+\r\n                                            hidden+\r\n                                            global_context.i18n.t(' e quando chega vê o resultado'), \r\n                                            '-', \r\n                                            global_context.i18n.t('resultado_coroa')]);\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                    global_context.setCommands(local_commands)\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport './main.css'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConsolePage from './pages/console';\r\nimport { GlobalContextProvider } from './helpers/GlobalContext';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nimport Commands from './classes/commands';\r\nimport Jogos from './classes/jogos';\r\n\r\ntoast.configure()\r\n\r\nexport default props => {\r\n    const [actual_page, setPage] = useState(<ConsolePage />);\r\n    const [global_context, setGlobalContext] = useState({});\r\n    const [terminal, setTerminal] = useState();\r\n\r\n    global_context.setPage = setPage;\r\n    global_context.user = 'user';\r\n    global_context.i18n = i18n;\r\n    global_context.terminal = terminal;\r\n    global_context.setTerminal = setTerminal;\r\n    global_context.commands_instance = new Commands({'context': global_context})\r\n    global_context.jogos_instance = new Jogos({'context': global_context})\r\n\r\n    return <div className='wrapper'>            \r\n                <GlobalContextProvider value={{global_context, setGlobalContext}}>\r\n                    <I18nextProvider i18n={i18n}>\r\n                        {actual_page}\r\n                    </I18nextProvider>\r\n                </GlobalContextProvider>\r\n        </div>\r\n        \r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './main/app'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}